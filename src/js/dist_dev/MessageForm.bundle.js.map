{"version":3,"file":"MessageForm.bundle.js","mappings":"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","sources":["webpack://espace-souvenir/./docroot/themes/custom/souvenirs/src/js/components/Forms/FormInput.js","webpack://espace-souvenir/./docroot/themes/custom/souvenirs/src/js/components/Forms/FormTextarea.js","webpack://espace-souvenir/./docroot/themes/custom/souvenirs/src/js/components/Forms/MessageForm.js","webpack://espace-souvenir/./docroot/themes/custom/souvenirs/src/js/components/Upload/ImagePreview.js","webpack://espace-souvenir/./docroot/themes/custom/souvenirs/src/js/components/Upload/InputWithDescription.js","webpack://espace-souvenir/./docroot/themes/custom/souvenirs/src/js/components/Upload/useUpload.js","webpack://espace-souvenir/./docroot/themes/custom/souvenirs/src/js/services/useForm.js"],"sourcesContent":["import classNames from \"classnames\";\nimport React from \"react\";\nimport { renderToStaticMarkup } from \"react-dom/server\";\n\nimport Icon from \"../Icons/Icon\";\n\nconst FormInput = React.memo(function FormInput({\n  id,\n  name,\n  imageName,\n  labelText,\n  labelImage,\n  type,\n  value,\n  autocomplete,\n  min,\n  max,\n  checked,\n  inputClass,\n  wrapperClass,\n  onInputChange,\n  onInputBlur,\n  inputPlaceholder,\n  error,\n  displayErrorMessage = true,\n  isRequired,\n  disabled,\n  readOnly = false,\n  ariaDescription,\n}) {\n  const svgString = encodeURIComponent(\n    renderToStaticMarkup(\n      <Icon name=\"cross-red\" iconClass=\"input-error-icon\" />,\n    ),\n  );\n  const dataUri = `url(\"data:image/svg+xml,${svgString}\")`;\n  const optionalInput = !isRequired && (\n    <span className=\"optional-label\">&nbsp;(facultatif)</span>\n  );\n  return (\n    <div className={classNames(\"input-wrapper\", wrapperClass)}>\n      {/* Si type = text */}\n      {!labelImage && type !== \"checkbox\" && (\n        <label\n          htmlFor={id}\n          className={classNames(\"label\", {\n            \"label-error\": error,\n          })}\n        >\n          {labelText}\n          {optionalInput}\n        </label>\n      )}\n      <input\n        id={id}\n        type={type}\n        name={name}\n        readOnly={readOnly}\n        data-imagename={imageName}\n        className={classNames(\"input\", {\n          \"input-error\": error,\n          inputClass,\n        })}\n        style={{\n          backgroundImage: error ? dataUri : \"none\",\n        }}\n        value={value}\n        min={min}\n        autoComplete={autocomplete ? autocomplete : null}\n        maxLength={max ? max : null}\n        disabled={disabled}\n        required={isRequired}\n        aria-required={isRequired}\n        aria-describedby={\n          error ? `error-${id} ${ariaDescription}` : ariaDescription\n        }\n        aria-invalid={error ? \"true\" : false}\n        onChange={onInputChange}\n        onBlur={onInputBlur}\n        checked={type === \"radio\" ? checked : null}\n        placeholder={inputPlaceholder || \"\"}\n      />\n      {/* Si type = radio avec image comme label */}\n      {labelImage && (\n        <label\n          htmlFor={id}\n          className={classNames(\"label\", {\n            \"label-error\": error,\n          })}\n        >\n          <img src={labelImage} className=\"label-image\" alt=\"\" width=\"150\" />\n        </label>\n      )}\n      {/* Si type = checkbox sans images */}\n      {type === \"checkbox\" && (\n        <label\n          htmlFor={id}\n          className={classNames(\"label\", {\n            \"label-error\": error,\n          })}\n        >\n          {labelText}\n        </label>\n      )}\n      {error && displayErrorMessage && (\n        <p className=\"error-message\" id={`error-${id}`} aria-live=\"polite\">\n          {error}\n        </p>\n      )}\n    </div>\n  );\n});\n\nexport default FormInput;\n","import classNames from \"classnames\";\nimport React, { useEffect, useState } from \"react\";\n\nconst FormTextarea = React.memo(function FormTextarea({\n  id,\n  name,\n  labelText,\n  labelHidden,\n  value,\n  min,\n  max,\n  wrapperClass,\n  onInputChange,\n  onInputBlur,\n  inputPlaceholder,\n  error,\n  isRequired = false,\n  disabled = false,\n}) {\n  const [ariaDescription, setAriaDescription] = useState(null);\n  const [caracters, setCaracters] = useState(max);\n  useEffect(() => {\n    setAriaDescription(`${name}-requirement`);\n    if (error) setAriaDescription(`${ariaDescription} error-${id}`);\n  }, [error]);\n\n  const handleInputChange = (e) => {\n    onInputChange(e);\n\n    if (max) {\n      const newCaracters = Number(max) - e.target.value.length;\n      setCaracters(newCaracters);\n    }\n  };\n  return (\n    <div className={classNames(\"input-wrapper\", wrapperClass)}>\n      <label\n        htmlFor={id}\n        className={classNames(\"label\", {\n          \"label-error\": error,\n          \"sr-only\": labelHidden,\n        })}\n      >\n        {labelText}\n      </label>\n      <textarea\n        id={id}\n        name={name}\n        className={classNames(\"textarea\", {\n          \"input-error\": error,\n        })}\n        value={value}\n        min={min}\n        maxLength={max}\n        rows={10}\n        disabled={disabled}\n        required={isRequired}\n        aria-required={isRequired}\n        aria-describedby={ariaDescription}\n        onChange={handleInputChange}\n        onBlur={onInputBlur}\n        placeholder={inputPlaceholder || \"\"}\n      />\n      {error && (\n        <p className=\"error-message\" id={`error-${id}`} aria-live=\"polite\">\n          {error}\n        </p>\n      )}\n      {max && (\n        <p\n          className=\"message-photo-requirements\"\n          data-testid=\"caractersCount\"\n          id={`${name}-requirement`}\n        >\n          {caracters} caractères restants.\n        </p>\n      )}\n    </div>\n  );\n});\n\nexport default FormTextarea;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { useQueryClient } from \"react-query\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\n\nimport {\n  messagesAccueilKey,\n  messagesListKey,\n  numberMessagesKey,\n  postMessageSendUrl,\n} from \"../../constants\";\nimport {\n  messagePictureDeleted,\n  messagePictureUpdated,\n} from \"../../context/messageSlice\";\nimport { modalOpened } from \"../../context/modalSlice\";\nimport ButtonsWrapper from \"../../layouts/ButtonsWrapper\";\nimport { isEmptyArray } from \"../../services/formatting\";\nimport scrollSmoothToElement from \"../../services/scrollSmoothToElement\";\nimport useForm from \"../../services/useForm\";\nimport usePostQuery from \"../../services/usePostQuery\";\nimport Button from \"../Button/Button\";\nimport Icon from \"../Icons/Icon\";\nimport Loader from \"../Loader/Loader\";\nimport ImagePreview from \"../Upload/ImagePreview\";\nimport InputWithDescription from \"../Upload/InputWithDescription\";\nimport useUpload from \"../Upload/useUpload\";\nimport FormInput from \"./FormInput\";\nimport FormTextarea from \"./FormTextarea\";\n\nconst initialFormState = {\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  message: \"\",\n  photo: \"\",\n  eventsOptin: \"\",\n};\nconst validationValues = {\n  firstName: {\n    pattern: {\n      value: /^([0-9a-zA-Z\\u00C0-\\u00FF ',-])+$/,\n      message: \"Merci de renseigner votre prénom\",\n    },\n    isRequired: true,\n    required: \"Merci de renseigner votre prénom\",\n  },\n  lastName: {\n    pattern: {\n      value: /^([0-9a-zA-Z\\u00C0-\\u00FF ',-])+$/,\n      message: \"Merci de renseigner votre nom de famille\",\n    },\n    isRequired: true,\n    required: \"Merci de renseigner votre nom de famille\",\n  },\n  email: {\n    pattern: {\n      value:\n        /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/,\n      message:\n        \"Merci de renseigner une adresse email valide (p.e. email@domain.com)\",\n    },\n    isRequired: true,\n    required: \"Merci de renseigner votre adresse email\",\n  },\n  message: {\n    isRequired: true,\n    required: \"Merci de remplir le texte du message\",\n  },\n  photo: {\n    isRequired: false,\n  },\n  eventsOptin: {\n    isRequired: false,\n  },\n};\nexport default function MessageForm({ reference, closeForm }) {\n  const messagesState = useSelector((state) => state.messages);\n  const [error, setError] = useState(null);\n  const [userPhoto, setUserPhoto] = useState(null);\n  const dispatch = useDispatch();\n  const params = useParams();\n  const sendMessage = usePostQuery();\n  const queryClient = useQueryClient();\n  const hiddenGlobalError = useRef();\n  const {\n    inputValues,\n    changeHandler,\n    errorHandler,\n    submitErrorsHandler,\n    errors,\n    isValid,\n  } = useForm({\n    initialFormState,\n    validationValues,\n  });\n\n  const {\n    handleCompressedUpload,\n    compressedFiles,\n    handleDeletePhoto,\n    errorMessage,\n  } = useUpload({\n    numberOfPhotos: 3,\n    dispatchCbAction: saveDefuntPhoto,\n  });\n\n  function saveDefuntPhoto(files) {\n    if (!isEmptyArray(files)) {\n      const defuntImgObject = {\n        url: window.URL.createObjectURL(files[0]),\n        name: files[0].name,\n      };\n      dispatch(\n        messagePictureUpdated({\n          messagePictures: [defuntImgObject],\n          customMessagePicture: true,\n        }),\n      );\n      setUserPhoto(files[0]);\n    } else {\n      dispatch(messagePictureDeleted());\n    }\n  }\n\n  const openHeroBannerModal = () => {\n    dispatch(\n      modalOpened({\n        theme: \"dark\",\n        hasCloseButton: true,\n        modalType: \"MessagePictureHeroModal\",\n      }),\n    );\n  };\n\n  const handleCloseForm = () => {\n    closeForm({ messageSent: false });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const arrayOfErrors = Object.keys(errors);\n    if (!isValid && hiddenGlobalError.current) {\n      scrollSmoothToElement(hiddenGlobalError.current);\n    }\n\n    if (arrayOfErrors.length === 0) {\n      const emptyFields = Object.entries(inputValues)\n        .filter(\n          ([key, value]) => validationValues[key].isRequired && value === \"\",\n        )\n        .map(([key]) => key);\n\n      if (emptyFields.length) {\n        submitErrorsHandler(emptyFields);\n        if (hiddenGlobalError.current)\n          scrollSmoothToElement(hiddenGlobalError.current);\n      } else {\n        const formData = new FormData();\n        if (userPhoto?.name && messagesState?.customMessagePicture) {\n          formData.append(\"file\", userPhoto, userPhoto?.name);\n        }\n        if (\n          !messagesState?.customMessagePicture &&\n          messagesState?.messagePictures\n        ) {\n          formData.append(\n            \"field_message_banner\",\n            messagesState?.messagePictures[0]?.name,\n          );\n        }\n        formData.append(\"field_message_name\", inputValues?.firstName);\n        formData.append(\"field_message_surname\", inputValues?.lastName);\n        formData.append(\"field_message_email\", inputValues?.email);\n        formData.append(\"field_message_texte\", inputValues?.message);\n        formData.append(\"field_message_status\", true);\n        formData.append(\"entity_hash\", params.espaceId);\n        sendMessage.mutate(\n          {\n            data: formData,\n            apiUrl: postMessageSendUrl,\n          },\n          {\n            onSuccess: ({ data }) => {\n              if (data.status === 200) {\n                setTimeout(() => {\n                  queryClient.refetchQueries([messagesListKey]);\n                  queryClient.refetchQueries([messagesAccueilKey]);\n                  queryClient.refetchQueries([numberMessagesKey]);\n                  closeForm({ messageSent: true });\n                }, 1000);\n              } else {\n                setError(\n                  \"Une erreur s'est produite. Merci de réessayer plus tard.\",\n                );\n              }\n            },\n            onError: (err) => {\n              setError(\n                \"Une erreur s'est produite. Merci de réessayer plus tard.\",\n              );\n            },\n          },\n        );\n      }\n    }\n  };\n\n  useEffect(() => {\n    return () => handleDeletePhoto();\n  }, []);\n\n  return (\n    <>\n      <h2 className=\"content-heading-2\">Ecrire un message</h2>\n      <div className=\"messages-form-wrapper\">\n        <form\n          noValidate\n          ref={reference}\n          onSubmit={handleSubmit}\n          data-testid=\"messagesForm\"\n          className=\"messages-form\"\n        >\n          <h3 className=\"messages-form-title\">\n            Quel message souhaitez-vous transmettre ?\n          </h3>\n          {!isValid && (\n            <p className=\"sr-only\" tabIndex={0}>\n              Merci de corriger les erreurs\n            </p>\n          )}\n          {error && <p className=\"upload-error-message\">{error}</p>}\n          <FormInput\n            id=\"lastName\"\n            name=\"lastName\"\n            labelText=\"Votre nom\"\n            type=\"text\"\n            isRequired\n            value={inputValues.lastName}\n            inputPlaceholder=\"Nom\"\n            onInputChange={changeHandler}\n            onInputBlur={errorHandler}\n            error={errors.lastName}\n          />\n          <FormInput\n            id=\"firstName\"\n            name=\"firstName\"\n            labelText=\"Votre prénom\"\n            type=\"text\"\n            isRequired\n            value={inputValues.firstName}\n            inputPlaceholder=\"Prénom\"\n            onInputChange={changeHandler}\n            onInputBlur={errorHandler}\n            error={errors.firstName}\n          />\n          <FormInput\n            id=\"email\"\n            name=\"email\"\n            labelText=\"Votre email\"\n            type=\"email\"\n            isRequired\n            value={inputValues.email}\n            inputPlaceholder=\"Email\"\n            onInputChange={changeHandler}\n            onInputBlur={errorHandler}\n            error={errors.email}\n          />\n\n          <fieldset className=\"message-photo-upload\">\n            <legend>\n              Souhaitez-vous ajouter une photo ?\n              <span className=\"optional-label\">&nbsp;(facultatif)</span>\n              <span className=\"message-photo-requirements\">\n                &nbsp;PNG/JPG/JPEG/BMP - 2 Mo maximum\n              </span>\n            </legend>\n            {errorMessage && (\n              <p className=\"upload-error-message\">{errorMessage}</p>\n            )}\n            {!messagesState?.messagePictures && (\n              <>\n                <InputWithDescription\n                  inputName=\"message-photos\"\n                  handleCompressedUpload={handleCompressedUpload}\n                  btnClass=\"bg-current\"\n                  describedBy={`${\n                    errorMessage\n                      ? \"error-message\"\n                      : \"message-photo max-photo-number max-photo-size\"\n                  }`}\n                />\n                <Button\n                  type=\"button\"\n                  btnClass=\"bg-white message-photo-button\"\n                  onClickAction={openHeroBannerModal}\n                >\n                  <Icon name=\"picture\" iconClass=\"current-icon\" />\n                  <span className=\"separator\">&nbsp;</span>\n                  <span className=\"button-text\">Choisir une photo</span>\n                </Button>\n              </>\n            )}\n\n            {messagesState?.messagePictures &&\n              messagesState.messagePictures.map((file) => (\n                <ImagePreview\n                  key={typeof file === \"string\" ? file : file.name}\n                  source={typeof file === \"string\" ? file : file.url}\n                  imgName={file.name}\n                  imgSize={file.size}\n                  deletePhoto={handleDeletePhoto}\n                  modal={false}\n                />\n              ))}\n          </fieldset>\n\n          <FormTextarea\n            labelText=\"Votre message\"\n            isRequired\n            id=\"message\"\n            name=\"message\"\n            max={1000}\n            value={inputValues.message}\n            inputPlaceholder=\"Votre message\"\n            onInputChange={changeHandler}\n            onInputBlur={errorHandler}\n            error={errors.message}\n          />\n          <FormInput\n            type=\"checkbox\"\n            id=\"eventsOptin\"\n            name=\"eventsOptin\"\n            isRequired={false}\n            labelText=\"Je souhaite être alerté des évènements privés ajoutés dans cet Espace Souvenirs\"\n          />\n          <ButtonsWrapper position=\"right\">\n            <div className=\"button-loader-wrapper\">\n              <Button\n                type=\"button\"\n                btnClass=\"bg-transparent\"\n                onClickAction={handleCloseForm}\n              >\n                Annuler\n              </Button>\n\n              <Button\n                type=\"submit\"\n                disabled={sendMessage?.isLoading}\n                btnClass=\"bg-current\"\n                dataTestid=\"submitMessageForm\"\n                onClickAction={handleSubmit}\n              >\n                <span className=\"button-text\">Envoyer un message</span>\n                <span className=\"separator\">&nbsp;</span>\n                <Icon name=\"next\" iconClass=\"white-icon\" />\n              </Button>\n              {sendMessage?.isLoading && <Loader position=\"relative\" />}\n            </div>\n          </ButtonsWrapper>\n        </form>\n      </div>\n    </>\n  );\n}\n","import classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport Button from \"../Button/Button\";\nimport Icon from \"../Icons/Icon\";\n\nexport default function ImagePreview({\n  source,\n  imgName,\n  imgSize,\n  deletePhoto,\n  modal,\n}) {\n  const imageSize = imgSize ? Math.ceil(imgSize / 1000) : null;\n\n  const handleDeletePhoto = () => {\n    deletePhoto(imgName);\n  };\n\n  return (\n    <div\n      className={classNames(\n        \"image-preview-wrapper\",\n        modal && \"image-preview-wrapper--modal\",\n      )}\n    >\n      {modal && <span>Photo</span>}\n      <div className=\"image-preview\">\n        <img\n          alt=\"\"\n          className=\"image-preview-image\"\n          width=\"200\"\n          height=\"200\"\n          src={source}\n        />\n      </div>\n      {imgName && <span className=\"preview-description--bold\">{imgName}</span>}\n      {imageSize && <span className=\"preview-description\">{imageSize}Kb</span>}\n      <Button\n        ariaLabel={`supprimer ${imgName}`}\n        type=\"button\"\n        btnClass=\"delete-image-button\"\n        onClickAction={handleDeletePhoto}\n      >\n        <Icon name=\"delete\" iconClass=\"delete-image-icon\" />\n      </Button>\n    </div>\n  );\n}\n\nImagePreview.propTypes = {\n  source: PropTypes.string.isRequired,\n  imgName: PropTypes.string,\n  deletePhoto: PropTypes.func.isRequired,\n  imgSize: PropTypes.number,\n  modal: PropTypes.bool,\n};\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport Icon from \"../Icons/Icon\";\n\nexport default function InputWithDescription({\n  inputName,\n  handleCompressedUpload,\n  hasImageRequirement,\n  btnClass,\n  inputDisabled = false,\n  describedBy,\n  inputFile,\n}) {\n  return (\n    <div className=\"input-file-wrapper\">\n      <input\n        accept=\"image/png, image/jpeg, image/jpg\"\n        type=\"file\"\n        id={inputName}\n        ref={inputFile}\n        name={inputName}\n        onChange={handleCompressedUpload}\n        disabled={inputDisabled}\n        aria-describedby={`input-file-description ${describedBy}`}\n      />\n      <label\n        htmlFor={inputName}\n        className={classNames(\"file-input-label\", btnClass)}\n      >\n        <Icon\n          name=\"upload\"\n          iconClass={\n            btnClass && btnClass === \"bg-current\"\n              ? \"white-icon\"\n              : \"current-icon\"\n          }\n        />\n        <span className=\"separator\">&nbsp;</span>\n        Déposer votre photo\n      </label>\n      {hasImageRequirement && (\n        <p id=\"input-file-description\" className=\"input-file-description\">\n          Les formats supportés : PNG/JPG/JPEG/BMP - 2 Mo maximum\n        </p>\n      )}\n    </div>\n  );\n}\n","import Compressor from \"compressorjs\";\nimport PropTypes from \"prop-types\";\nimport React, { useState } from \"react\";\n\n/* import './upload.scss'; */\n\nexport default function useUpload({\n  numberOfPhotos,\n  dispatchCbAction,\n  uploadedPhotos,\n}) {\n  const [compressedFiles, setcompressedFiles] = useState(uploadedPhotos || []);\n\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const handleCompressedUpload = (e) => {\n    const image = e.target.files[0];\n\n    const fileNames = compressedFiles.map((file) => file.name);\n    if (fileNames.length >= numberOfPhotos) {\n      setErrorMessage(\n        `Vous ne pouvez pas ajouter plus de ${numberOfPhotos} photos`,\n      );\n      return;\n    }\n\n    if (image.size >= 2097152) {\n      setErrorMessage(\"Votre photo ne peut pas dépasser 2 Mo\");\n      return;\n    }\n\n    if (\n      image.type !== \"image/jpeg\" &&\n      image.type !== \"image/png\" &&\n      image.type !== \"image/bmp\"\n    ) {\n      setErrorMessage(\n        \"Vous pouvez télécharge des photo au format PNG/JPG/JPEG/BMP uniquement\",\n      );\n      return;\n    }\n\n    if (\n      fileNames.length === 0 ||\n      (fileNames.length > 0 && !fileNames.includes(image.name))\n    ) {\n      setErrorMessage(null);\n      new Compressor(image, {\n        quality: 0.8,\n        success: (compressedResult) => {\n          setcompressedFiles([...compressedFiles, compressedResult]);\n          dispatchCbAction &&\n            dispatchCbAction([...compressedFiles, compressedResult]);\n        },\n        error(e) {\n          console.error(e);\n        },\n      });\n    }\n  };\n\n  const handleDeletePhoto = (imageName) => {\n    const filteredImages = compressedFiles.filter(\n      (image) => image.name !== imageName,\n    );\n    setcompressedFiles(filteredImages);\n    setErrorMessage(null);\n    dispatchCbAction && dispatchCbAction(filteredImages);\n  };\n  return {\n    handleCompressedUpload,\n    compressedFiles,\n    handleDeletePhoto,\n    errorMessage,\n  };\n}\n\nuseUpload.defaultProps = {\n  numberOfPhotos: 1,\n};\nuseUpload.propTypes = {\n  name: PropTypes.string.isRequired,\n  numberOfPhotos: PropTypes.number,\n};\n","import React, { useState } from \"react\";\n\nexport default function useForm({ initialFormState, validationValues }) {\n  const [inputValues, setValues] = useState(initialFormState);\n  const [errors, setErrors] = useState({});\n  const [isValid, setIsValid] = useState(true);\n\n  /** on vérifie au onBlur si le pattern correspond à la saisie,\n   * si ce n'est pas le cas, retourne le message d'erreur, sinon on retourne null  */\n  const getError = (target) => {\n    if (target.value !== \"\") {\n      const { pattern } = validationValues[target.name];\n      const { patterns } = validationValues[target.name];\n      if (pattern?.value && !RegExp(pattern.value).test(target.value)) {\n        return pattern?.message;\n      }\n      if (patterns) {\n        const arrayOfPatterns = patterns.map((pattern) => {\n          if (pattern.value && !RegExp(pattern.value).test(target.value)) {\n            return pattern.name;\n          }\n        });\n        const noNullValues = arrayOfPatterns.filter((value) => !!value);\n        if (noNullValues.length) {\n          return noNullValues;\n        } else {\n          return null;\n        }\n      }\n      return null;\n    }\n    if (target.getAttribute(\"required\") !== null && target.value === \"\") {\n      const { required } = validationValues[target.name];\n      return required;\n    }\n    return null;\n  };\n\n  /**\n   * Ici on ajoute les valeurs des champs dans le state du formulaire.\n   * au onChange on vérifie si la saisie est bonne et retire le message d'erreur\n   * @param {event} event target, le champs input\n   */\n  const changeHandler = ({ target }) => {\n    const newValues = { ...inputValues, [target.name]: target.value };\n    if (!getError(target)) {\n      if (Object.prototype.hasOwnProperty.call(errors, target.name)) {\n        const { [target.name]: newProp, ...rest } = errors;\n        setErrors(rest);\n      }\n    }\n    if (Object.keys(errors).length === 0) setIsValid(true);\n    setValues(newValues);\n  };\n\n  /**\n   * @param {event} event target, le champs input\n   */\n  const errorHandler = ({ target }) => {\n    let newErrors = {};\n    if (getError(target)) {\n      setIsValid(false);\n      newErrors = { ...errors, [target.name]: getError(target) };\n    } else {\n      newErrors = { ...errors };\n    }\n    setErrors(newErrors);\n  };\n\n  const submitErrorsHandler = (fields) => {\n    const newErrors = {};\n    let requiredMessage = null;\n    fields.forEach((field) => {\n      if (field.requiredMessage) {\n        requiredMessage = field.requiredMessage;\n      } else {\n        requiredMessage = validationValues[field]?.required;\n      }\n      !field.requiredMessage\n        ? (newErrors[field] = requiredMessage)\n        : (newErrors[field.name] = requiredMessage);\n    });\n    setIsValid(false);\n    setErrors(newErrors);\n  };\n\n  return {\n    inputValues,\n    changeHandler,\n    errorHandler,\n    submitErrorsHandler,\n    errors,\n    isValid,\n  };\n}\n"],"names":["classNames","React","renderToStaticMarkup","Icon","FormInput","memo","id","name","imageName","labelText","labelImage","type","value","autocomplete","min","max","checked","inputClass","wrapperClass","onInputChange","onInputBlur","inputPlaceholder","error","displayErrorMessage","isRequired","disabled","readOnly","ariaDescription","svgString","encodeURIComponent","dataUri","optionalInput","backgroundImage","useEffect","useState","FormTextarea","labelHidden","setAriaDescription","caracters","setCaracters","handleInputChange","e","newCaracters","Number","target","length","useRef","useQueryClient","useDispatch","useSelector","useParams","messagesAccueilKey","messagesListKey","numberMessagesKey","postMessageSendUrl","messagePictureDeleted","messagePictureUpdated","modalOpened","ButtonsWrapper","isEmptyArray","scrollSmoothToElement","useForm","usePostQuery","Button","Loader","ImagePreview","InputWithDescription","useUpload","initialFormState","firstName","lastName","email","message","photo","eventsOptin","validationValues","pattern","required","MessageForm","reference","closeForm","messagesState","state","messages","setError","userPhoto","setUserPhoto","dispatch","params","sendMessage","queryClient","hiddenGlobalError","inputValues","changeHandler","errorHandler","submitErrorsHandler","errors","isValid","numberOfPhotos","dispatchCbAction","saveDefuntPhoto","handleCompressedUpload","compressedFiles","handleDeletePhoto","errorMessage","files","defuntImgObject","url","window","URL","createObjectURL","messagePictures","customMessagePicture","openHeroBannerModal","theme","hasCloseButton","modalType","handleCloseForm","messageSent","handleSubmit","preventDefault","arrayOfErrors","Object","keys","current","emptyFields","entries","filter","key","map","formData","FormData","append","espaceId","mutate","data","apiUrl","onSuccess","status","setTimeout","refetchQueries","onError","err","file","size","isLoading","PropTypes","source","imgName","imgSize","deletePhoto","modal","imageSize","Math","ceil","propTypes","string","func","number","bool","inputName","hasImageRequirement","btnClass","inputDisabled","describedBy","inputFile","Compressor","uploadedPhotos","setcompressedFiles","setErrorMessage","image","fileNames","includes","quality","success","compressedResult","console","filteredImages","defaultProps","setValues","setErrors","setIsValid","getError","patterns","RegExp","test","arrayOfPatterns","noNullValues","getAttribute","newValues","prototype","hasOwnProperty","call","newProp","rest","newErrors","fields","requiredMessage","forEach","field"],"sourceRoot":""}