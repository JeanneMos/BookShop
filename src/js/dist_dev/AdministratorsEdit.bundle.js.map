{"version":3,"file":"AdministratorsEdit.bundle.js","mappings":"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","sources":["webpack://espace-souvenir/./docroot/themes/custom/souvenirs/src/js/components/Administrators/Administrator.js","webpack://espace-souvenir/./docroot/themes/custom/souvenirs/src/js/components/Administrators/AdministratorsList.js","webpack://espace-souvenir/./docroot/themes/custom/souvenirs/src/js/components/ContentPages/AdministratorsEdit.js"],"sourcesContent":["import classNames from \"classnames\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { administratorPersonalInfoModified } from \"../../context/administratorSlice\";\nimport Button from \"../Button/Button\";\nimport Icon from \"../Icons/Icon\";\n\nexport default function Administrator({ admin, current }) {\n  const dispatch = useDispatch();\n  const editingPersonalInfo = () => {\n    dispatch(\n      administratorPersonalInfoModified({\n        isEditingPersonalInfo: true,\n        isEditingAdministator: false,\n      }),\n    );\n  };\n  return (\n    <li\n      className={classNames(\n        \"administrator-item\",\n        current && \"administrator-item-active\",\n      )}\n    >\n      <p className=\"administrator-info\">\n        <span className=\"administrator-name\">\n          <span className=\"info-firstname\">{admin.firstName}</span>{\" \"}\n          <span className=\"info-firstname\">{admin.lastName}</span>\n        </span>\n        <span className=\"administrator-email\">{admin.email}</span>\n      </p>\n      {current && (\n        <Button btnClass=\"bg-current\" onClickAction={editingPersonalInfo}>\n          <Icon name=\"pencil\" iconClass=\"white-icon book-icon\" />\n          <span className=\"separator\">&nbsp;</span>\n          <span className=\"button-text\">modifier</span>\n        </Button>\n      )}\n    </li>\n  );\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport Administrator from \"./Administrator\";\n\nexport default function AdministratorsList() {\n  const administratorState = useSelector((state) => state.administrator);\n\n  return (\n    <ul className=\"administrators-list\">\n      {administratorState.currentUser && administratorState.isAdmin && (\n        <Administrator\n          key={administratorState.currentUser.email}\n          current={true}\n          admin={administratorState.currentUser}\n        />\n      )}\n    </ul>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport AdministratorsList from \"../Administrators/AdministratorsList\";\nimport Icon from \"../Icons/Icon\";\n\nconst AdministratorPersonalInfoForm = React.lazy(() =>\n  import(\n    /* webpackChunkName: \"PersonalInfoForm\" */ \"../Forms/AdministratorPersonalInfoForm\"\n  ),\n);\n\nexport default function AdministratorsEdit() {\n  const [messageSuccess, setMessageSuccess] = useState(false);\n  const administratorState = useSelector((state) => state.administrator);\n\n  const handleCloseForm = ({ userUpdated }) => {\n    setMessageSuccess(userUpdated);\n  };\n\n  if (administratorState.isEditingPersonalInfo)\n    return <AdministratorPersonalInfoForm closeForm={handleCloseForm} />;\n\n  return (\n    <>\n      {messageSuccess && (\n        <p className=\"message-status mb-40\">\n          <Icon name=\"check\" iconClass=\"message-status-icon\" />\n          <span>Vos modifications ont bien été enregistrées.</span>\n        </p>\n      )}\n      <h2 className=\"content-heading-2\">Liste des gestionnaires</h2>\n      {administratorState?.currentUser && administratorState?.isAdmin && (\n        <AdministratorsList />\n      )}\n      <></>\n    </>\n  );\n}\n"],"names":["classNames","React","useDispatch","administratorPersonalInfoModified","Button","Icon","Administrator","admin","current","dispatch","editingPersonalInfo","isEditingPersonalInfo","isEditingAdministator","firstName","lastName","email","useSelector","AdministratorsList","administratorState","state","administrator","currentUser","isAdmin","useState","AdministratorPersonalInfoForm","lazy","AdministratorsEdit","messageSuccess","setMessageSuccess","handleCloseForm","userUpdated"],"sourceRoot":""}