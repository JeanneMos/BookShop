{"version":3,"file":"docroot_themes_custom_souvenirs_src_js_components_Forms_LoginUserForm_js.bundle.js","mappings":"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","sources":["webpack://espace-souvenir/./docroot/themes/custom/souvenirs/src/js/components/Button/Button.js","webpack://espace-souvenir/./docroot/themes/custom/souvenirs/src/js/components/Forms/FormInput.js","webpack://espace-souvenir/./docroot/themes/custom/souvenirs/src/js/components/Forms/LoginUserForm.js","webpack://espace-souvenir/./docroot/themes/custom/souvenirs/src/js/services/useForm.js","webpack://espace-souvenir/./docroot/themes/custom/souvenirs/src/js/services/usePostQuery.js"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport React from \"react\";\n\n/* import './button.scss';\n */\nexport default function Button({\n  children,\n  type = \"button\",\n  disabled,\n  btnClass,\n  onClickAction,\n  dataTestid,\n  ariaLabel,\n}) {\n  return (\n    <button\n      data-testid={dataTestid}\n      disabled={disabled}\n      type={type === \"submit\" ? \"submit\" : \"button\"}\n      className={btnClass}\n      onClick={onClickAction}\n      aria-label={ariaLabel ? ariaLabel : null}\n    >\n      {children}\n    </button>\n  );\n}\n\nButton.defaultProps = {\n  type: \"button\",\n  btnClass: null,\n};\nButton.propTypes = {\n  type: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  btnClass: PropTypes.string,\n};\n","import classNames from \"classnames\";\nimport React from \"react\";\nimport { renderToStaticMarkup } from \"react-dom/server\";\n\nimport Icon from \"../Icons/Icon\";\n\nconst FormInput = React.memo(function FormInput({\n  id,\n  name,\n  imageName,\n  labelText,\n  labelImage,\n  type,\n  value,\n  autocomplete,\n  min,\n  max,\n  checked,\n  inputClass,\n  wrapperClass,\n  onInputChange,\n  onInputBlur,\n  inputPlaceholder,\n  error,\n  displayErrorMessage = true,\n  isRequired,\n  disabled,\n  readOnly = false,\n  ariaDescription,\n}) {\n  const svgString = encodeURIComponent(\n    renderToStaticMarkup(\n      <Icon name=\"cross-red\" iconClass=\"input-error-icon\" />,\n    ),\n  );\n  const dataUri = `url(\"data:image/svg+xml,${svgString}\")`;\n  const optionalInput = !isRequired && (\n    <span className=\"optional-label\">&nbsp;(facultatif)</span>\n  );\n  return (\n    <div className={classNames(\"input-wrapper\", wrapperClass)}>\n      {/* Si type = text */}\n      {!labelImage && type !== \"checkbox\" && (\n        <label\n          htmlFor={id}\n          className={classNames(\"label\", {\n            \"label-error\": error,\n          })}\n        >\n          {labelText}\n          {optionalInput}\n        </label>\n      )}\n      <input\n        id={id}\n        type={type}\n        name={name}\n        readOnly={readOnly}\n        data-imagename={imageName}\n        className={classNames(\"input\", {\n          \"input-error\": error,\n          inputClass,\n        })}\n        style={{\n          backgroundImage: error ? dataUri : \"none\",\n        }}\n        value={value}\n        min={min}\n        autoComplete={autocomplete ? autocomplete : null}\n        maxLength={max ? max : null}\n        disabled={disabled}\n        required={isRequired}\n        aria-required={isRequired}\n        aria-describedby={\n          error ? `error-${id} ${ariaDescription}` : ariaDescription\n        }\n        aria-invalid={error ? \"true\" : false}\n        onChange={onInputChange}\n        onBlur={onInputBlur}\n        checked={type === \"radio\" ? checked : null}\n        placeholder={inputPlaceholder || \"\"}\n      />\n      {/* Si type = radio avec image comme label */}\n      {labelImage && (\n        <label\n          htmlFor={id}\n          className={classNames(\"label\", {\n            \"label-error\": error,\n          })}\n        >\n          <img src={labelImage} className=\"label-image\" alt=\"\" width=\"150\" />\n        </label>\n      )}\n      {/* Si type = checkbox sans images */}\n      {type === \"checkbox\" && (\n        <label\n          htmlFor={id}\n          className={classNames(\"label\", {\n            \"label-error\": error,\n          })}\n        >\n          {labelText}\n        </label>\n      )}\n      {error && displayErrorMessage && (\n        <p className=\"error-message\" id={`error-${id}`} aria-live=\"polite\">\n          {error}\n        </p>\n      )}\n    </div>\n  );\n});\n\nexport default FormInput;\n","import React, { useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\n\nimport { postUserUrl } from \"../../constants\";\nimport {\n  currentUserSet,\n  isAdminSet,\n  userLoggedIn,\n} from \"../../context/administratorSlice\";\nimport { modalClosed, modalOpened } from \"../../context/modalSlice\";\nimport { getMainAdminESEntities } from \"../../services/getGestionnairePrincipalES\";\nimport useForm from \"../../services/useForm\";\nimport usePostQuery from \"../../services/usePostQuery\";\nimport Button from \"../Button/Button\";\nimport Icon from \"../Icons/Icon\";\nimport Loader from \"../Loader/Loader\";\nimport FormInput from \"./FormInput\";\n\nconst initialFormState = {\n  username: \"\",\n  password: \"\",\n};\n\nconst validationValues = {\n  username: {\n    pattern: {\n      value: /^([^<>()[\\],\"])+$/,\n      message: \"Merci de renseigner votre identifiant\",\n    },\n    isRequired: true,\n    required: \"Merci de renseigner votre identifiant\",\n  },\n  password: {\n    isRequired: true,\n    required: \"Merci de renseigner votre mot de passe\",\n  },\n};\nexport default function LoginUserForm() {\n  const params = useParams();\n  const [isLoader, setIsLoader] = useState(false);\n  const [wrongCredentialsMessage, setWrongCredentialsMessage] = useState(null);\n  const administratorState = useSelector((state) => state.administrator);\n  const modalState = useSelector((state) => state.modal);\n  const dispatch = useDispatch();\n  const {\n    inputValues,\n    changeHandler,\n    errorHandler,\n    submitErrorsHandler,\n    errors,\n    isValid,\n  } = useForm({\n    initialFormState,\n    validationValues,\n  });\n  const form = useRef(null);\n\n  const postUser = usePostQuery();\n\n  const openForgotPasswordPopin = () => {\n    dispatch(modalClosed());\n    dispatch(\n      modalOpened({\n        theme: \"dark\",\n        hasCloseButton: true,\n        modalType: \"ForgotPasswordModal\",\n      }),\n    );\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const arrayOfErrors = Object.keys(errors);\n\n    if (arrayOfErrors.length === 0) {\n      const emptyFields = Object.entries(inputValues)\n        .filter(\n          ([key, value]) => validationValues[key].isRequired && value === \"\",\n        )\n        .map(([key]) => key);\n\n      if (emptyFields.length) {\n        submitErrorsHandler(emptyFields);\n      } else {\n        const user_obj = {\n          username: inputValues.username,\n          password: inputValues.password,\n        };\n        try {\n          setIsLoader(true);\n          postUser.mutate(\n            { data: user_obj, apiUrl: postUserUrl },\n            {\n              onSuccess: async (data) => {\n                // const token = await axios.get('/session/token');\n                if (!data.data.code) {\n                  // check if data is not object.\n                  if (typeof data.data === \"string\") {\n                    setWrongCredentialsMessage(\n                      \"Merci de vérifier vos identifiants\",\n                    );\n                    setIsLoader(false);\n                  } else {\n                    setWrongCredentialsMessage(null);\n                    const {\n                      field_user_civility,\n                      field_user_surname,\n                      field_user_name,\n                      field_user_email,\n                      field_user_phone,\n                      user_gp_entity,\n                    } = data.data;\n                    const user = {\n                      isLogged: true,\n                      lastName: field_user_surname,\n                      firstName: field_user_name,\n                      email: field_user_email,\n                      phone: field_user_phone,\n                      civility: field_user_civility,\n                      gp_entities: user_gp_entity,\n                    };\n                    dispatch(userLoggedIn());\n                    dispatch(currentUserSet({ user }));\n                    if (\n                      getMainAdminESEntities(user_gp_entity).length &&\n                      params\n                    ) {\n                      dispatch(\n                        isAdminSet({\n                          isAdmin: getMainAdminESEntities(\n                            user_gp_entity,\n                          ).includes(params.espaceId),\n                        }),\n                      );\n                    }\n                    setIsLoader(false);\n                    if (modalState.isOpen) dispatch(modalClosed());\n                    if (administratorState.isAdmin) window.location.reload();\n                  }\n                } else {\n                  setWrongCredentialsMessage(\n                    \"Merci de vérifier vos identifiants\",\n                  );\n                  setIsLoader(false);\n                }\n              },\n              onError: () => {\n                setIsLoader(false);\n                setWrongCredentialsMessage(\n                  \"Merci de vérifier vos identifiants\",\n                );\n              },\n            },\n          );\n        } catch (err) {\n          setIsLoader(false);\n          setWrongCredentialsMessage(null);\n          console.error(err);\n        }\n      }\n    }\n  };\n\n  return (\n    <>\n      <p className=\"wrong-credentials-message\">{wrongCredentialsMessage}</p>\n      <form ref={form} noValidate id=\"user-login-form\" onSubmit={handleSubmit}>\n        <FormInput\n          id=\"username\"\n          name=\"username\"\n          labelText=\"E-mail\"\n          type=\"text\"\n          autocomplete=\"username\"\n          value={inputValues.username}\n          onInputChange={changeHandler}\n          onInputBlur={errorHandler}\n          error={errors.username}\n          isRequired\n        />\n        <FormInput\n          id=\"password\"\n          name=\"password\"\n          labelText=\"Mot de passe\"\n          type=\"password\"\n          autocomplete=\"current-password\"\n          value={inputValues.password}\n          onInputChange={changeHandler}\n          onInputBlur={errorHandler}\n          error={errors.password}\n          isRequired\n        />\n        <input type=\"hidden\" name=\"form_id\" value=\"user_login_form\" />\n        <input type=\"hidden\" name=\"op\" value=\"se connecter\" />\n        <div className=\"button-loader-wrapper\">\n          <Button type=\"submit\" btnClass=\"bg-current center\">\n            <span className=\"button-text\">Se connecter</span>\n            <span className=\"separator\">&nbsp;</span>\n            <Icon name=\"next\" iconClass=\"white-icon\" />\n          </Button>\n          {isLoader && <Loader />}\n        </div>\n        <Button\n          btnClass=\"forgot-password-link bg-transparent center\"\n          onClickAction={openForgotPasswordPopin}\n        >\n          Mot de passe oublié?\n        </Button>\n      </form>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\n\nexport default function useForm({ initialFormState, validationValues }) {\n  const [inputValues, setValues] = useState(initialFormState);\n  const [errors, setErrors] = useState({});\n  const [isValid, setIsValid] = useState(true);\n\n  /** on vérifie au onBlur si le pattern correspond à la saisie,\n   * si ce n'est pas le cas, retourne le message d'erreur, sinon on retourne null  */\n  const getError = (target) => {\n    if (target.value !== \"\") {\n      const { pattern } = validationValues[target.name];\n      const { patterns } = validationValues[target.name];\n      if (pattern?.value && !RegExp(pattern.value).test(target.value)) {\n        return pattern?.message;\n      }\n      if (patterns) {\n        const arrayOfPatterns = patterns.map((pattern) => {\n          if (pattern.value && !RegExp(pattern.value).test(target.value)) {\n            return pattern.name;\n          }\n        });\n        const noNullValues = arrayOfPatterns.filter((value) => !!value);\n        if (noNullValues.length) {\n          return noNullValues;\n        } else {\n          return null;\n        }\n      }\n      return null;\n    }\n    if (target.getAttribute(\"required\") !== null && target.value === \"\") {\n      const { required } = validationValues[target.name];\n      return required;\n    }\n    return null;\n  };\n\n  /**\n   * Ici on ajoute les valeurs des champs dans le state du formulaire.\n   * au onChange on vérifie si la saisie est bonne et retire le message d'erreur\n   * @param {event} event target, le champs input\n   */\n  const changeHandler = ({ target }) => {\n    const newValues = { ...inputValues, [target.name]: target.value };\n    if (!getError(target)) {\n      if (Object.prototype.hasOwnProperty.call(errors, target.name)) {\n        const { [target.name]: newProp, ...rest } = errors;\n        setErrors(rest);\n      }\n    }\n    if (Object.keys(errors).length === 0) setIsValid(true);\n    setValues(newValues);\n  };\n\n  /**\n   * @param {event} event target, le champs input\n   */\n  const errorHandler = ({ target }) => {\n    let newErrors = {};\n    if (getError(target)) {\n      setIsValid(false);\n      newErrors = { ...errors, [target.name]: getError(target) };\n    } else {\n      newErrors = { ...errors };\n    }\n    setErrors(newErrors);\n  };\n\n  const submitErrorsHandler = (fields) => {\n    const newErrors = {};\n    let requiredMessage = null;\n    fields.forEach((field) => {\n      if (field.requiredMessage) {\n        requiredMessage = field.requiredMessage;\n      } else {\n        requiredMessage = validationValues[field]?.required;\n      }\n      !field.requiredMessage\n        ? (newErrors[field] = requiredMessage)\n        : (newErrors[field.name] = requiredMessage);\n    });\n    setIsValid(false);\n    setErrors(newErrors);\n  };\n\n  return {\n    inputValues,\n    changeHandler,\n    errorHandler,\n    submitErrorsHandler,\n    errors,\n    isValid,\n  };\n}\n","import axios from \"axios\";\nimport React from \"react\";\nimport { useMutation } from \"react-query\";\n\nconst defaultOptions = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n  withCredentials: true,\n  credentials: \"include\",\n};\nconst usePostQuery = (parameters) => {\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isPaused,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n  } = useMutation(({ data, apiUrl, options = parameters || defaultOptions }) =>\n    axios.post(apiUrl, data, options),\n  );\n  return { mutate, isSuccess, data, isLoading, error };\n};\nexport default usePostQuery;\n"],"names":["PropTypes","React","Button","children","type","disabled","btnClass","onClickAction","dataTestid","ariaLabel","defaultProps","propTypes","string","node","isRequired","classNames","renderToStaticMarkup","Icon","FormInput","memo","id","name","imageName","labelText","labelImage","value","autocomplete","min","max","checked","inputClass","wrapperClass","onInputChange","onInputBlur","inputPlaceholder","error","displayErrorMessage","readOnly","ariaDescription","svgString","encodeURIComponent","dataUri","optionalInput","backgroundImage","useRef","useState","useDispatch","useSelector","useParams","postUserUrl","currentUserSet","isAdminSet","userLoggedIn","modalClosed","modalOpened","getMainAdminESEntities","useForm","usePostQuery","Loader","initialFormState","username","password","validationValues","pattern","message","required","LoginUserForm","params","isLoader","setIsLoader","wrongCredentialsMessage","setWrongCredentialsMessage","administratorState","state","administrator","modalState","modal","dispatch","inputValues","changeHandler","errorHandler","submitErrorsHandler","errors","isValid","form","postUser","openForgotPasswordPopin","theme","hasCloseButton","modalType","handleSubmit","e","preventDefault","arrayOfErrors","Object","keys","length","emptyFields","entries","filter","key","map","user_obj","mutate","data","apiUrl","onSuccess","code","field_user_civility","field_user_surname","field_user_name","field_user_email","field_user_phone","user_gp_entity","user","isLogged","lastName","firstName","email","phone","civility","gp_entities","isAdmin","includes","espaceId","isOpen","window","location","reload","onError","err","console","setValues","setErrors","setIsValid","getError","target","patterns","RegExp","test","arrayOfPatterns","noNullValues","getAttribute","newValues","prototype","hasOwnProperty","call","newProp","rest","newErrors","fields","requiredMessage","forEach","field","axios","useMutation","defaultOptions","headers","withCredentials","credentials","parameters","options","post","isError","isIdle","isLoading","isPaused","isSuccess","mutateAsync","reset","status"],"sourceRoot":""}