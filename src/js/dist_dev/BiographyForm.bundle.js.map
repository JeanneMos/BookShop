{"version":3,"file":"BiographyForm.bundle.js","mappings":"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","sources":["webpack://espace-souvenir/./docroot/themes/custom/souvenirs/src/js/components/Forms/BiographyForm.js","webpack://espace-souvenir/./docroot/themes/custom/souvenirs/src/js/components/Forms/FormTextarea.js","webpack://espace-souvenir/./docroot/themes/custom/souvenirs/src/js/services/useForm.js","webpack://espace-souvenir/./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\n\nimport { bioMachineName, postSaveFieldApiUrl } from \"../../constants\";\nimport { biographyUpdated } from \"../../context/biographySlice\";\nimport ButtonsWrapper from \"../../layouts/ButtonsWrapper\";\nimport { decoded } from \"../../services/formatting\";\nimport scrollSmoothToElement from \"../../services/scrollSmoothToElement\";\nimport useForm from \"../../services/useForm\";\nimport usePostQuery from \"../../services/usePostQuery\";\nimport Button from \"../Button/Button\";\nimport Icon from \"../Icons/Icon\";\n/* import BiographyPhotosFieldset from \"./BiographyPhotosFieldset\"; */\nimport FormTextarea from \"./FormTextarea\";\n\nconst validationValues = {\n  biography: {\n    isRequired: false,\n  },\n  photos: {\n    isRequired: false,\n  },\n};\nexport default function BiographyForm({ reference, closeForm }) {\n  const params = useParams();\n  const biographyState = useSelector((state) => state.biography);\n  const dispatch = useDispatch();\n  const initialFormState = {\n    biography: biographyState?.isBiographyEdited\n      ? decoded(biographyState?.biography)\n      : \"\",\n    photos: null,\n  };\n\n  const { inputValues, changeHandler, errorHandler, errors, isValid } = useForm(\n    { initialFormState, validationValues },\n  );\n\n  const updateBiography = usePostQuery();\n\n  const [networkError, setNetworkError] = useState(\"\");\n  const networkErrorMessage = useRef(null);\n\n  const handleCloseForm = () => {\n    closeForm({ messageSent: false });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const biography_obj = {\n      field_value: {\n        field_bio_story: inputValues.biography,\n        field_bio_photo: null,\n      },\n      field_machine_name: bioMachineName,\n      entity_hash: params.espaceId,\n    };\n    try {\n      updateBiography.mutate(\n        { data: biography_obj, apiUrl: postSaveFieldApiUrl },\n        {\n          onSuccess: (data) => {\n            /*           const structuredImages = compressedFiles.map(file => {\n            const imgObject = {\n              url: window.URL.createObjectURL(file),\n              name: file.name\n            }\n            return imgObject\n          }) */\n            const { field_bio_story, field_bio_custom } = JSON.parse(\n              data?.data?.field_value,\n            );\n            //dispatch(biographyPhotoAdded({biographyPhotos: structuredImages}))\n            dispatch(\n              biographyUpdated({\n                biography: field_bio_story,\n                isBiographyEdited: field_bio_custom,\n              }),\n            );\n            closeForm({ messageSent: true });\n          },\n          onError: (err) => {\n            setNetworkError(\n              \"Une erreur s'est produite. Veuillez reprendre ultérieurement.\",\n            );\n            networkErrorMessage?.current &&\n              scrollSmoothToElement(networkErrorMessage.current);\n          },\n        },\n      );\n    } catch {\n      setNetworkError(\n        \"Une erreur s'est produite. Veuillez reprendre ultérieurement.\",\n      );\n      networkErrorMessage?.current &&\n        scrollSmoothToElement(networkErrorMessage.current);\n    }\n  };\n\n  return (\n    <>\n      {networkError && (\n        <p ref={networkErrorMessage} className=\"message-status mb-40\">\n          <Icon name=\"cross\" iconClass=\"message-status-icon error-icon\" />\n          <span>{networkError}</span>\n        </p>\n      )}\n      <h2 className=\"content-heading-2\">Écrire la biographie</h2>\n      <div className=\"biography-wrapper\">\n        <form\n          noValidate\n          ref={reference}\n          onSubmit={handleSubmit}\n          data-testid=\"biographyForm\"\n          className=\"biography-form\"\n        >\n          {!isValid && (\n            <p className=\"sr-only\" tabIndex={0}>\n              Merci de corriger les erreurs\n            </p>\n          )}\n          <div className=\"biography-textarea\">\n            <FormTextarea\n              labelText=\"biographie\"\n              labelHidden\n              isRequired\n              id=\"biography\"\n              name=\"biography\"\n              max={1000}\n              value={inputValues.biography}\n              inputPlaceholder=\"Biographie\"\n              onInputChange={changeHandler}\n              onInputBlur={errorHandler}\n              error={errors.biography}\n            />\n          </div>\n          {/* <BiographyPhotosFieldset /> */}\n\n          <ButtonsWrapper position=\"right\" btnWrapperClass=\"mt-30\">\n            <Button\n              type=\"button\"\n              btnClass=\"bg-transparent\"\n              onClickAction={handleCloseForm}\n            >\n              Annuler\n            </Button>\n            <Button\n              type=\"submit\"\n              btnClass=\"bg-current\"\n              dataTestid=\"submitBiographyForm\"\n            >\n              <Icon name=\"save\" iconClass=\"white-icon\" />\n              <span className=\"separator\">&nbsp;</span>\n              <span className=\"button-text\">Enregistrer</span>\n            </Button>\n          </ButtonsWrapper>\n        </form>\n      </div>\n    </>\n  );\n}\n","import classNames from \"classnames\";\nimport React, { useEffect, useState } from \"react\";\n\nconst FormTextarea = React.memo(function FormTextarea({\n  id,\n  name,\n  labelText,\n  labelHidden,\n  value,\n  min,\n  max,\n  wrapperClass,\n  onInputChange,\n  onInputBlur,\n  inputPlaceholder,\n  error,\n  isRequired = false,\n  disabled = false,\n}) {\n  const [ariaDescription, setAriaDescription] = useState(null);\n  const [caracters, setCaracters] = useState(max);\n  useEffect(() => {\n    setAriaDescription(`${name}-requirement`);\n    if (error) setAriaDescription(`${ariaDescription} error-${id}`);\n  }, [error]);\n\n  const handleInputChange = (e) => {\n    onInputChange(e);\n\n    if (max) {\n      const newCaracters = Number(max) - e.target.value.length;\n      setCaracters(newCaracters);\n    }\n  };\n  return (\n    <div className={classNames(\"input-wrapper\", wrapperClass)}>\n      <label\n        htmlFor={id}\n        className={classNames(\"label\", {\n          \"label-error\": error,\n          \"sr-only\": labelHidden,\n        })}\n      >\n        {labelText}\n      </label>\n      <textarea\n        id={id}\n        name={name}\n        className={classNames(\"textarea\", {\n          \"input-error\": error,\n        })}\n        value={value}\n        min={min}\n        maxLength={max}\n        rows={10}\n        disabled={disabled}\n        required={isRequired}\n        aria-required={isRequired}\n        aria-describedby={ariaDescription}\n        onChange={handleInputChange}\n        onBlur={onInputBlur}\n        placeholder={inputPlaceholder || \"\"}\n      />\n      {error && (\n        <p className=\"error-message\" id={`error-${id}`} aria-live=\"polite\">\n          {error}\n        </p>\n      )}\n      {max && (\n        <p\n          className=\"message-photo-requirements\"\n          data-testid=\"caractersCount\"\n          id={`${name}-requirement`}\n        >\n          {caracters} caractères restants.\n        </p>\n      )}\n    </div>\n  );\n});\n\nexport default FormTextarea;\n","import React, { useState } from \"react\";\n\nexport default function useForm({ initialFormState, validationValues }) {\n  const [inputValues, setValues] = useState(initialFormState);\n  const [errors, setErrors] = useState({});\n  const [isValid, setIsValid] = useState(true);\n\n  /** on vérifie au onBlur si le pattern correspond à la saisie,\n   * si ce n'est pas le cas, retourne le message d'erreur, sinon on retourne null  */\n  const getError = (target) => {\n    if (target.value !== \"\") {\n      const { pattern } = validationValues[target.name];\n      const { patterns } = validationValues[target.name];\n      if (pattern?.value && !RegExp(pattern.value).test(target.value)) {\n        return pattern?.message;\n      }\n      if (patterns) {\n        const arrayOfPatterns = patterns.map((pattern) => {\n          if (pattern.value && !RegExp(pattern.value).test(target.value)) {\n            return pattern.name;\n          }\n        });\n        const noNullValues = arrayOfPatterns.filter((value) => !!value);\n        if (noNullValues.length) {\n          return noNullValues;\n        } else {\n          return null;\n        }\n      }\n      return null;\n    }\n    if (target.getAttribute(\"required\") !== null && target.value === \"\") {\n      const { required } = validationValues[target.name];\n      return required;\n    }\n    return null;\n  };\n\n  /**\n   * Ici on ajoute les valeurs des champs dans le state du formulaire.\n   * au onChange on vérifie si la saisie est bonne et retire le message d'erreur\n   * @param {event} event target, le champs input\n   */\n  const changeHandler = ({ target }) => {\n    const newValues = { ...inputValues, [target.name]: target.value };\n    if (!getError(target)) {\n      if (Object.prototype.hasOwnProperty.call(errors, target.name)) {\n        const { [target.name]: newProp, ...rest } = errors;\n        setErrors(rest);\n      }\n    }\n    if (Object.keys(errors).length === 0) setIsValid(true);\n    setValues(newValues);\n  };\n\n  /**\n   * @param {event} event target, le champs input\n   */\n  const errorHandler = ({ target }) => {\n    let newErrors = {};\n    if (getError(target)) {\n      setIsValid(false);\n      newErrors = { ...errors, [target.name]: getError(target) };\n    } else {\n      newErrors = { ...errors };\n    }\n    setErrors(newErrors);\n  };\n\n  const submitErrorsHandler = (fields) => {\n    const newErrors = {};\n    let requiredMessage = null;\n    fields.forEach((field) => {\n      if (field.requiredMessage) {\n        requiredMessage = field.requiredMessage;\n      } else {\n        requiredMessage = validationValues[field]?.required;\n      }\n      !field.requiredMessage\n        ? (newErrors[field] = requiredMessage)\n        : (newErrors[field.name] = requiredMessage);\n    });\n    setIsValid(false);\n    setErrors(newErrors);\n  };\n\n  return {\n    inputValues,\n    changeHandler,\n    errorHandler,\n    submitErrorsHandler,\n    errors,\n    isValid,\n  };\n}\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}"],"names":["React","useRef","useState","useDispatch","useSelector","useParams","bioMachineName","postSaveFieldApiUrl","biographyUpdated","ButtonsWrapper","decoded","scrollSmoothToElement","useForm","usePostQuery","Button","Icon","FormTextarea","validationValues","biography","isRequired","photos","BiographyForm","reference","closeForm","params","biographyState","state","dispatch","initialFormState","isBiographyEdited","inputValues","changeHandler","errorHandler","errors","isValid","updateBiography","networkError","setNetworkError","networkErrorMessage","handleCloseForm","messageSent","handleSubmit","e","preventDefault","biography_obj","field_value","field_bio_story","field_bio_photo","field_machine_name","entity_hash","espaceId","mutate","data","apiUrl","onSuccess","JSON","parse","field_bio_custom","onError","err","current","classNames","useEffect","memo","id","name","labelText","labelHidden","value","min","max","wrapperClass","onInputChange","onInputBlur","inputPlaceholder","error","disabled","ariaDescription","setAriaDescription","caracters","setCaracters","handleInputChange","newCaracters","Number","target","length","setValues","setErrors","setIsValid","getError","pattern","patterns","RegExp","test","message","arrayOfPatterns","map","noNullValues","filter","getAttribute","required","newValues","Object","prototype","hasOwnProperty","call","newProp","rest","keys","newErrors","submitErrorsHandler","fields","requiredMessage","forEach","field"],"sourceRoot":""}