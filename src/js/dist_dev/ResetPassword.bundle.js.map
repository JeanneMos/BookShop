{"version":3,"file":"ResetPassword.bundle.js","mappings":"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","sources":["webpack://espace-souvenir/./docroot/themes/custom/souvenirs/src/js/components/Button/Button.js","webpack://espace-souvenir/./docroot/themes/custom/souvenirs/src/js/components/Forms/ResetPasswordForm.js","webpack://espace-souvenir/./docroot/themes/custom/souvenirs/src/js/pages/ResetPassword.js","webpack://espace-souvenir/./node_modules/@babel/runtime/helpers/esm/typeof.js"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport React from \"react\";\n\n/* import './button.scss';\n */\nexport default function Button({\n  children,\n  type = \"button\",\n  disabled,\n  btnClass,\n  onClickAction,\n  dataTestid,\n  ariaLabel,\n}) {\n  return (\n    <button\n      data-testid={dataTestid}\n      disabled={disabled}\n      type={type === \"submit\" ? \"submit\" : \"button\"}\n      className={btnClass}\n      onClick={onClickAction}\n      aria-label={ariaLabel ? ariaLabel : null}\n    >\n      {children}\n    </button>\n  );\n}\n\nButton.defaultProps = {\n  type: \"button\",\n  btnClass: null,\n};\nButton.propTypes = {\n  type: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  btnClass: PropTypes.string,\n};\n","import React, { useRef, useState } from \"react\";\n\nimport ButtonsWrapper from \"../../layouts/ButtonsWrapper\";\nimport scrollSmoothToElement from \"../../services/scrollSmoothToElement\";\nimport useForm from \"../../services/useForm\";\nimport usePostQuery from \"../../services/usePostQuery\";\nimport Button from \"../Button/Button\";\nimport Icon from \"../Icons/Icon\";\nimport NewPasswordFieldset from \"./NewPasswordFieldset\";\n\nconst validationValues = {\n  repeat_new_password: {\n    isRequired: true,\n    required: \"Merci de confirmer le mot de passe\",\n  },\n  new_password: {\n    isRequired: true,\n    required: \"Merci de renseigner le mot de passe\",\n    patterns: [\n      {\n        name: \"patternNumber\",\n        value: /[0-9]/,\n      },\n      {\n        name: \"patternLength\",\n        value: /^[\\s\\S]{8,}$/,\n      },\n      {\n        name: \"patternMaj\",\n        value: /[A-Z]/,\n      },\n      {\n        name: \"patternSpecialChar\",\n        value: /[ !\"#$%&'()*+,\\-./:;<=>?@[\\\\\\]^_`{|}~]/,\n      },\n    ],\n  },\n};\nconst initialFormState = {\n  new_password: \"\",\n  repeat_new_password: \"\",\n};\n\nexport default function ResetPasswordForm() {\n  const [isLoader, setIsLoader] = useState(false);\n  const [networkErrorMessage, setNetworkErrorMessage] = useState(null);\n  const hiddenGlobalError = useRef();\n  const networkError = useRef();\n  const resetPassword = usePostQuery();\n  const {\n    inputValues,\n    changeHandler,\n    errorHandler,\n    submitErrorsHandler,\n    errors,\n    isValid,\n  } = useForm({\n    initialFormState,\n    validationValues,\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const arrayOfErrors = Object.keys(errors);\n    if (!isValid && hiddenGlobalError.current) {\n      scrollSmoothToElement(hiddenGlobalError.current);\n    }\n\n    if (arrayOfErrors.length === 0) {\n      const emptyFields = Object.entries(inputValues)\n        .filter(\n          ([key, value]) => validationValues[key].isRequired && value === \"\",\n        )\n        .map(([key]) => key);\n\n      if (emptyFields.length) {\n        submitErrorsHandler(emptyFields);\n      } else if (\n        inputValues.new_password !== \"\" &&\n        inputValues.repeat_new_password === \"\"\n      ) {\n        // Check if new password is not empty but confirm new password is empty\n        submitErrorsHandler([\n          ...emptyFields,\n          {\n            name: \"repeat_new_password\",\n            requiredMessage: \"Merci de confirmer votre mot de passe\",\n          },\n        ]);\n      } else if (\n        inputValues.new_password !== \"\" &&\n        inputValues.repeat_new_password !== inputValues.new_password\n      ) {\n        // Check the correspondance between new password and confirm new password\n        submitErrorsHandler([\n          ...emptyFields,\n          {\n            name: \"repeat_new_password\",\n            requiredMessage: \"Les mots de passes ne sont pas identiques\",\n          },\n        ]);\n      } else if (\n        inputValues.new_password !== \"\" &&\n        inputValues.current_password === \"\"\n      ) {\n        // Check if new password is not empty but current password is empty\n        submitErrorsHandler([\n          ...emptyFields,\n          {\n            name: \"current_password\",\n            requiredMessage: \"Merci de confirmer votre mot de passe actuel\",\n          },\n        ]);\n      } else {\n        const infos_obj = {\n          new_password: inputValues.new_password,\n          repeat_new_password: inputValues.repeat_new_password,\n        };\n        try {\n          setIsLoader(true);\n\n          resetPassword.mutate(\n            { data: infos_obj, apiUrl: \"///////\" },\n            {\n              onSuccess: ({ data }) => {},\n              onError: () => {\n                setIsLoader(false);\n              },\n            },\n          );\n        } catch {\n          // Something went wrong\n          setIsLoader(false);\n          setNetworkErrorMessage(\n            \"Une erreur s'est produite. Veuillez reprendre ult√©rieurement.\",\n          );\n          networkErrorMessage?.current &&\n            scrollSmoothToElement(networkErrorMessage.current);\n        }\n      }\n    }\n  };\n\n  return (\n    <form noValidate onSubmit={handleSubmit} className=\"reset-password-form\">\n      <p>Bienvenue,</p>\n      <p>Vous pouvez d√©sormais vous connecter √† votre Espace Souvenirs.</p>\n      <p>Personnaliser votre mot de passe pour vos prochaines connexions.</p>\n      {networkErrorMessage && (\n        <p ref={networkError} className=\"message-status mb-40\">\n          <Icon name=\"cross\" iconClass=\"message-status-icon error-icon\" />\n          <span>{networkErrorMessage}</span>\n        </p>\n      )}\n      {!isValid && (\n        <p className=\"sr-only\" tabIndex={0} ref={hiddenGlobalError}>\n          Merci de corriger les erreurs\n        </p>\n      )}\n      <fieldset className=\"mt-30\">\n        <NewPasswordFieldset\n          inputValues={inputValues}\n          changeHandler={changeHandler}\n          errorHandler={errorHandler}\n          requiredNewPassword={true}\n          errors={errors}\n        />\n      </fieldset>\n      <ButtonsWrapper position=\"mt-30\">\n        <Button type=\"submit\" btnClass=\"bg-current\">\n          <span className=\"button-text\">acc√©der √† l&apos;espace souvenirs</span>\n          <span className=\"separator\">&nbsp;</span>\n          <Icon name=\"next\" iconClass=\"white-icon\" />\n        </Button>\n      </ButtonsWrapper>\n    </form>\n  );\n}\n","import React, { useEffect } from \"react\";\n\nimport ResetPasswordForm from \"../components/Forms/ResetPasswordForm\";\nimport Layout from \"../layouts/Layout\";\nimport scrollSmoothToElement from \"../services/scrollSmoothToElement\";\n\nexport default function ResetPassword() {\n  useEffect(() => {\n    document.title = \"Nouveau mot de passe\";\n    scrollSmoothToElement();\n  }, []);\n\n  return (\n    <Layout>\n      <div className=\"reset-password-wrapper\">\n        <ResetPasswordForm />\n      </div>\n    </Layout>\n  );\n}\n","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}"],"names":["PropTypes","React","Button","children","type","disabled","btnClass","onClickAction","dataTestid","ariaLabel","defaultProps","propTypes","string","node","isRequired","useRef","useState","ButtonsWrapper","scrollSmoothToElement","useForm","usePostQuery","Icon","NewPasswordFieldset","validationValues","repeat_new_password","required","new_password","patterns","name","value","initialFormState","ResetPasswordForm","isLoader","setIsLoader","networkErrorMessage","setNetworkErrorMessage","hiddenGlobalError","networkError","resetPassword","inputValues","changeHandler","errorHandler","submitErrorsHandler","errors","isValid","handleSubmit","e","preventDefault","arrayOfErrors","Object","keys","current","length","emptyFields","entries","filter","key","map","requiredMessage","current_password","infos_obj","mutate","data","apiUrl","onSuccess","onError","useEffect","Layout","ResetPassword","document","title"],"sourceRoot":""}