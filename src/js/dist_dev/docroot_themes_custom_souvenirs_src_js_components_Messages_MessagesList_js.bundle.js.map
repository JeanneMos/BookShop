{"version":3,"file":"docroot_themes_custom_souvenirs_src_js_components_Messages_MessagesList_js.bundle.js","mappings":";;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAEe,SAASG,MAAT,OAAoC;EAAA,IAAlBC,KAAkB,QAAlBA,KAAkB;EAAA,IAAXC,OAAW,QAAXA,OAAW;EACjD,IAAMC,aAAa,GAAGD,OAAO,sBAAeA,OAAf,IAA2B,IAAxD;EACA,oBACE,iDAAC,wDAAD;IACE,EAAE,EAAC,OADL;IAEE,MAAM,mBAAYD,KAAZ,SAAoBE,aAApB,CAFR;IAGE,SAAS,EAAC;EAHZ,gBAKE,iDAAC,mDAAD;IAAM,IAAI,EAAC,UAAX;IAAsB,SAAS,EAAC;EAAhC,EALF,eAME;IAAM,SAAS,EAAC;EAAhB,UANF,eAOE;IAAM,SAAS,EAAC;EAAhB,iBAPF,CADF;AAWD;;;;;;;;;;;;;;AClBD;AAEe,SAASC,iBAAT,GAA6B;EAC1C,oBACE;IAAK,SAAS,EAAC;EAAf,gBACE;IAAG,SAAS,EAAC,qBAAb;IAAmC,eAAY;EAA/C,8DADF,CADF;AAOD;;;;;;;;;;;;;;;;;;;;;;;;ACVD;AACA;AACA;AAEA;AAIA;AACA;AAMA;AACA;AACA;AACA;AACA;AAEA,IAAMmB,WAAW,gBAAG1B,uCAAA,CAAW,SAAS0B,WAAT,OAAkC;EAAA;;EAAA,IAAXE,OAAW,QAAXA,OAAW;EAC/D,IACyBC,QADzB,GAWID,OAXJ,CACEE,qBADF;EAAA,IAEsBC,SAFtB,GAWIH,OAXJ,CAEEI,kBAFF;EAAA,IAG8BC,QAH9B,GAWIL,OAXJ,CAGEM,0BAHF;EAAA,IAIuBC,IAJvB,GAWIP,OAXJ,CAIEQ,mBAJF;EAAA,IAKuBhC,KALvB,GAWIwB,OAXJ,CAKES,mBALF;EAAA,IAMuBC,OANvB,GAWIV,OAXJ,CAMEW,mBANF;EAAA,IAOwBC,SAPxB,GAWIZ,OAXJ,CAOEa,oBAPF;EAAA,IAQwBC,MARxB,GAWId,OAXJ,CAQEe,oBARF;EAAA,IASEC,KATF,GAWIhB,OAXJ,CASEgB,KATF;EAAA,IAUcC,EAVd,GAWIjB,OAXJ,CAUEkB,UAVF;EAaA,IAAMC,eAAe,GAAGjC,wDAAW,CAAC,UAACkC,KAAD;IAAA,OAAWA,KAAK,CAACC,UAAjB;EAAA,CAAD,CAAnC;EACA,IAAMC,kBAAkB,GAAGpC,wDAAW,CAAC,UAACkC,KAAD;IAAA,OAAWA,KAAK,CAACG,aAAjB;EAAA,CAAD,CAAtC;EACA,IAAMC,YAAY,GAAG9B,kEAAY,EAAjC;;EAEA,gBAA8CV,+CAAQ,CAAC,KAAD,CAAtD;EAAA;EAAA,IAAOyC,eAAP;EAAA,IAAwBC,kBAAxB;;EACA,iBAAsC1C,+CAAQ,CAAC4B,SAAD,CAA9C;EAAA;EAAA,IAAOe,WAAP;EAAA,IAAoBC,cAApB;;EAEA,IAAMC,WAAW,GAAG9C,6CAAM,CAAC,IAAD,CAA1B;EACA,IAAM+C,cAAc,GAAG/C,6CAAM,CAAC,IAAD,CAA7B;EAEA,IAAMgD,aAAa,GAAGjD,8CAAO,CAAC,YAAM;IAClC,IAAIuB,QAAJ,EAAc,OAAOd,qEAAe,CAACE,qEAAe,CAACY,QAAD,CAAhB,CAAtB;EACf,CAF4B,EAE1B,CAACA,QAAD,CAF0B,CAA7B;;EAIA,IAAM2B,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACtB,OAAD,EAAa;IACpC,IAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;MAC/B,OAAOA,OAAO,CAAC,CAAD,CAAd;IACD;;IACD,OAAOA,OAAO,CAAC,CAAD,CAAP,CAAWuB,GAAlB;EACD,CALD;;EAOA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACpB,MAAD,EAAY;IAClC,iBAAUqB,MAAM,CAACC,QAAP,CAAgBC,MAA1B,kEAAwFvB,MAAxF;EACD,CAFD;;EAIA,IAAMwB,QAAQ,GAAG,SAAXA,QAAW,GAAM;IACrBZ,kBAAkB,CAAC,IAAD,CAAlB;EACD,CAFD;;EAIA,IAAMjD,OAAO,sDACXa,qEAAe,CAAC6B,eAAD,aAACA,eAAD,gDAACA,eAAe,CAAEoB,MAAlB,0DAAC,sBAAyBpC,SAA1B,CAAf,IAAuD,EAD5C,cAETgB,eAFS,aAETA,eAFS,iDAETA,eAAe,CAAEoB,MAFR,2DAET,uBAAyBtC,QAFhB,CAAb;;EAIA,IAAMuC,YAAY,GAAG,SAAfA,YAAe,GAAM;IACzB,IAAMC,SAAS,GAAG;MAChBC,WAAW,EAAE,CAACf,WADE;MAEhBgB,kBAAkB,EAAExD,gEAFJ;MAGhB+B,UAAU,EAAED;IAHI,CAAlB;;IAKA,IAAI;MACFO,YAAY,CAACoB,MAAb,CACE;QAAEC,IAAI,EAAEJ,SAAR;QAAmBK,MAAM,EAAE1D,+DAAuBA;MAAlD,CADF,EAEE;QACE2D,SAAS,EAAE,0BAAc;UAAA,IAAXF,IAAW,SAAXA,IAAW;UACvBjB,cAAc,CAACiB,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEH,WAAP,CAAd;QACD;MAHH,CAFF;IAQD,CATD,CASE,gBAAM;MACNd,cAAc,CAAChB,SAAD,CAAd;IACD;EACF,CAlBD;;EAoBA/B,gDAAS,CAAC,YAAM;IACd,IAAIgD,WAAW,CAACmB,OAAZ,IAAuBlB,cAAc,CAACkB,OAA1C,EAAmD;MACjD,IACEnB,WAAW,CAACmB,OAAZ,CAAoBC,YAApB,GAAmCnB,cAAc,CAACkB,OAAf,CAAuBC,YAD5D,EAEE;QACAvB,kBAAkB,CAAC,KAAD,CAAlB;MACD,CAJD,MAIO;QACLA,kBAAkB,CAAC,IAAD,CAAlB;MACD;IACF;EACF,CAVQ,EAUN,EAVM,CAAT;EAYA,oBACE;IACE,SAAS,EAAE9C,iDAAU,CAAC,cAAD,EAAiB;MACpC,qBAAqB8B,OAAO,IAAII;IADI,CAAjB;EADvB,GAKGE,KAAK,iBAAI,iDAAC,uDAAD,OALZ,EAMGN,OAAO,iBACN;IAAK,SAAS,EAAC;EAAf,gBACE;IACE,GAAG,EAAC,EADN;IAEE,SAAS,EAAC,oBAFZ;IAGE,OAAO,EAAC,MAHV;IAIE,GAAG,EAAEsB,gBAAgB,CAACtB,OAAD;EAJvB,EADF,CAPJ,EAgBGI,MAAM,iBACL;IAAK,SAAS,EAAC;EAAf,gBACE;IACE,GAAG,EAAC,EADN;IAEE,SAAS,EAAC,oBAFZ;IAGE,OAAO,EAAC,MAHV;IAIE,GAAG,EAAEoB,eAAe,CAACpB,MAAD;EAJtB,EADF,CAjBJ,eA0BE;IACE,SAAS,EAAElC,iDAAU,CAAC,gBAAD,EAAmB;MACtC,SAAS,CAAC8B,OAD4B;MAEtC,SAASA;IAF6B,CAAnB;EADvB,gBAME;IAAG,eAAY;EAAf,8BACY;IAAM,SAAS,EAAC;EAAhB,GAAkCP,SAAlC,CADZ,EACgE,GADhE,eAEE;IAAM,SAAS,EAAC;EAAhB,GAAiCF,QAAjC,CAFF,CANF,eAUE,4DAAI8B,aAAJ,CAVF,CA1BF,EAsCGxB,IAAI,iBACH;IACE,GAAG,EAAEuB,cADP;IAEE,SAAS,EAAElD,iDAAU,CAAC,cAAD,EAAiB;MACpCsE,IAAI,EAAEzB;IAD8B,CAAjB;EAFvB,gBAME;IAAG,GAAG,EAAEI;EAAR,GAAsBrC,oEAAc,CAACe,IAAD,CAApC,CANF,CAvCJ,EAiDG,CAACkB,eAAD,iBACC,iDAAC,+DAAD,qBACE,iDAAC,sDAAD;IACE,IAAI,EAAC,QADP;IAEE,aAAa,EAAEa,QAFjB;IAGE,QAAQ,EAAC;EAHX,iCAME;IAAM,SAAS,EAAC;EAAhB,gCACyBnC,SADzB,OACqCF,QADrC,CANF,CADF,CAlDJ,EAgEG,CAAAqB,kBAAkB,SAAlB,IAAAA,kBAAkB,WAAlB,YAAAA,kBAAkB,CAAE6B,OAApB,kBACC,iDAAC,+DAAD;IAAgB,QAAQ,EAAC;EAAzB,gBACE,iDAAC,uDAAD;IACE,SAAS,EAAE3B,YAAY,CAAC4B,SAD1B;IAEE,YAAY,EAAEZ,YAFhB;IAGE,SAAS,EAAEnC,QAHb;IAIE,SAAS,EAAEsB;EAJb,EADF,eAOE,iDAAC,sDAAD;IAAQ,KAAK,EAAEnD,KAAf;IAAsB,OAAO,EAAEC;EAA/B,EAPF,CAjEJ,CADF;AA8ED,CA7JmB,CAApB;AA8JA,+DAAeqB,WAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnLA;AACA;AACA;AACA;AAEA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASqE,YAAT,OAAgC;EAAA,IAARC,IAAQ,QAARA,IAAQ;;EAC7C,gBAAgCpF,+CAAQ,CAAC,KAAD,CAAxC;EAAA;EAAA,IAAOqF,QAAP;EAAA,IAAiBC,WAAjB;;EACA,IAAMhD,kBAAkB,GAAGpC,wDAAW,CAAC,UAACkC,KAAD;IAAA,OAAWA,KAAK,CAACG,aAAjB;EAAA,CAAD,CAAtC;;EACA,iBAAqB+B,4DAAS,EAA9B;EAAA,IAAQiB,QAAR,cAAQA,QAAR;;EACA,IAAMC,QAAQ,GAAGvF,wDAAW,EAA5B;EAEA,IAAMwF,WAAW,GACfL,IAAI,KAAKb,+CAAT,aACOE,sDADP,0BACqCc,QADrC,+BAEOd,sDAFP,0BAEqCc,QAFrC,CADF;EAIA,IAAMG,cAAc,GAClBN,IAAI,KAAKb,+CAAT,GAAmBI,0DAAnB,GAAwCC,uDAD1C;;EAGA,mBAIII,iEAAW,CAAC;IACdW,GAAG,EAAED,cADS;IAEdE,GAAG,EAAEH,WAFS;IAGdI,SAAS,EAAEvD,kBAAkB,CAAC6B,OAAnB,GAA6B,GAA7B,GAAmC,KAHhC;IAId2B,SAAS,EAAExD,kBAAkB,CAAC6B,OAAnB,GAA6B,CAA7B,GAAiCK,+DAJ9B;IAKduB,cAAc,EAAEzD,kBAAkB,CAAC6B;EALrB,CAAD,CAJf;EAAA,IACQ6B,YADR,gBACEnC,IADF;EAAA,IAESoC,aAFT,gBAEEC,KAFF;EAAA,IAGcC,kBAHd,gBAGEC,UAHF;;EAYA,oBAAqCpB,iEAAW,CAAC;IAC/CW,GAAG,EAAEd,yDAD0C;IAE/Ce,GAAG,YAAKlB,4DAAL,0BAAyCa,QAAzC,CAF4C;IAG/CM,SAAS,EAAE,CAHoC;IAI/CC,SAAS,EAAE,CAJoC;IAK/CO,OAAO,EAAE/D,kBAAkB,CAAC6B;EALmB,CAAD,CAAhD;EAAA,IAAcmC,kBAAd,iBAAQzC,IAAR;;EAQAhE,gDAAS,CAAC,YAAM;IACd,IAAIyC,kBAAkB,CAAC6B,OAAvB,EAAgC;MAC9BqB,QAAQ,CACNV,6EAAsB,CAAC;QACrByB,cAAc,EAAE,EAACD,kBAAD,aAACA,kBAAD,uBAACA,kBAAkB,CAAEE,kBAArB;MADK,CAAD,CADhB,CAAR;IAKD;;IACD,IAAIR,YAAJ,aAAIA,YAAJ,eAAIA,YAAY,CAAEE,KAAlB,EAAyB;MACvBZ,WAAW,CAAC,IAAD,CAAX;IACD;;IACD,OAAO,YAAM;MACX,IAAIF,IAAI,KAAKb,+CAAT,IAAoBjC,kBAAkB,CAAC6B,OAA3C,EAAoD;QAClDqB,QAAQ,CAACV,6EAAsB,CAAC;UAAEyB,cAAc,EAAE;QAAlB,CAAD,CAAvB,CAAR;MACD;IACF,CAJD;EAKD,CAhBQ,EAgBN,CAACD,kBAAD,CAhBM,CAAT;EAkBA,IAAIH,kBAAJ,EAAwB,oBAAO,iDAAC,8DAAD,OAAP;;EAExB,IAAIF,aAAa,IAAIZ,QAArB,EAA+B;IAC7B,oBACE;MAAK,SAAS,EAAC;IAAf,gBACE;MAAG,SAAS,EAAC;IAAb,gBACE,iDAAC,mDAAD;MAAM,IAAI,EAAC,OAAX;MAAmB,SAAS,EAAC;IAA7B,EADF,eAEE,4IAFF,CADF,CADF;EAWD;;EAED,IAAIW,YAAY,IAAIA,YAAJ,aAAIA,YAAJ,eAAIA,YAAY,CAAES,MAAlC,EAA0C;IAAA;;IACxC,IAAMC,eAAe,GAAGV,YAAY,CAACS,MAArC;IACA,IAAME,gBAAgB,GAAGrE,kBAAkB,SAAlB,IAAAA,kBAAkB,WAAlB,IAAAA,kBAAkB,CAAE6B,OAApB,GACrBuC,eAAe,CAACE,GAAhB,CAAoB,UAAC5F,OAAD,EAAa;MAC/B,uCACKA,OADL;QAEEgB,KAAK,EACH,CAAAgE,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEa,qBAAd,IAAsC,IAAtC,GACA,CAAC7F,OAAO,CAACM,0BAAT,GAAsC;MAJ1C;IAMD,CAPD,CADqB,GASrBoF,eATJ;;IAUA,IAAIC,gBAAgB,IAAIA,gBAAgB,CAACG,MAAjB,GAA0B,CAAlD,EAAqD;MACnD,oBAAO,iDAAC,gEAAD;QAAwB,QAAQ,EAAEH;MAAlC,EAAP;IACD;;IACD,IAAI,CAAAX,YAAY,SAAZ,IAAAA,YAAY,WAAZ,oCAAAA,YAAY,CAAES,MAAd,8EAAsBK,MAAtB,MAAiC,CAAjC,IAAsC,CAAAH,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,YAAAA,gBAAgB,CAAEG,MAAlB,MAA6B,CAAvE,EAA0E;MACxE,oBAAO,iDAAC,2DAAD,OAAP;IACD;;IACD,oBACE;MAAK,SAAS,EAAC;IAAf,gBACE;MAAI,SAAS,EAAC,eAAd;MAA8B,eAAY;IAA1C,GACGH,gBAAgB,CAACC,GAAjB,CAAqB,UAAC5F,OAAD,EAAa;MACjC,oBAAO,iDAAC,qDAAD;QAAa,GAAG,EAAEA,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEkB,UAA3B;QAAuC,OAAO,EAAElB;MAAhD,EAAP;IACD,CAFA,CADH,CADF,CADF;EASD;;EAED,oBACE;IAAK,SAAS,EAAC;EAAf,gBACE,iDAAC,8DAAD,OADF,CADF;AAKD;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5HD;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASkE,sBAAT,OAA8C;EAAA,IAAZiC,QAAY,QAAZA,QAAY;EAC3D,IAAM3B,QAAQ,GAAGvF,wDAAW,EAA5B;EACA,IAAMmH,WAAW,GAAGL,2DAAc,EAAlC;EACA,IAAMM,aAAa,GAAGnH,wDAAW,CAAC,UAACkC,KAAD;IAAA,OAAWA,KAAK,CAAC+E,QAAjB;EAAA,CAAD,CAAjC;EACA,IAAMG,kBAAkB,GAAGD,aAAa,CAACJ,cAAd,CAA6BH,MAA7B,GACvBO,aAAa,CAACJ,cADS,GAEvBC,iEAAW,CAACC,QAAD,EAAW,CAAX,EAAcH,uDAAd,CAFf;;EAGA,gBAAwChH,+CAAQ,CAACsH,kBAAD,CAAhD;EAAA;EAAA,IAAOC,YAAP;EAAA,IAAqBC,eAArB;;EAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;IAC7B,IAAIC,KAAK,GAAGH,YAAY,CAACT,MAAzB;IACA,IAAIa,GAAG,GAAGD,KAAK,GAAGV,uDAAlB;IACA,IAAML,gBAAgB,kGACjBY,YADiB,wFAEjBL,iEAAW,CAACC,QAAD,EAAWO,KAAX,EAAkBC,GAAlB,CAFM,EAAtB;IAKAH,eAAe,CAACb,gBAAD,CAAf;IACAnB,QAAQ,CAACyB,qEAAc,CAAC;MAAEA,cAAc,EAAEN;IAAlB,CAAD,CAAf,CAAR;EACD,CAVD;;EAYA,oBACE;IAAK,SAAS,EAAC;EAAf,gBACE;IAAI,SAAS,EAAC,eAAd;IAA8B,eAAY;EAA1C,GACGY,YAAY,CAACX,GAAb,CAAiB,UAAC5F,OAAD,EAAa;IAC7B,oBAAO,iDAAC,qDAAD;MAAa,GAAG,EAAEA,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEkB,UAA3B;MAAuC,OAAO,EAAElB;IAAhD,EAAP;EACD,CAFA,CADH,CADF,eAME;IAAG,SAAS,EAAC;EAAb,gBACE;IAAO,OAAO,EAAC;EAAf,oBACgBuG,YAAY,CAACT,MAD7B,oBACmDK,QAAQ,CAACL,MAD5D,CADF,eAKE;IACE,EAAE,EAAC,mBADL;IAEE,SAAS,EAAC,mBAFZ;IAGE,GAAG,EAAEK,QAAQ,CAACL,MAHhB;IAIE,KAAK,EAAES,YAAY,CAACT;EAJtB,EALF,CANF,EAkBGK,QAAQ,CAACL,MAAT,GAAkBS,YAAY,CAACT,MAA/B,iBACC,iDAAC,+DAAD;IAAgB,QAAQ,EAAC,QAAzB;IAAkC,eAAe,EAAC;EAAlD,gBACE,iDAAC,sDAAD;IACE,IAAI,EAAC,QADP;IAEE,QAAQ,EAAC,UAFX;IAGE,aAAa,EAAEW;EAHjB,gBAKE;IAAM,SAAS,EAAC;EAAhB,2BALF,eAME;IAAM,SAAS,EAAC;EAAhB,UANF,eAOE,iDAAC,oDAAD;IAAM,IAAI,EAAC,MAAX;IAAkB,SAAS,EAAC;EAA5B,EAPF,CADF,CAnBJ,CADF;AAkCD;;;;;;;;;;;;;;ACnED;AAEe,SAAS5G,aAAT,GAAyB;EACtC,oBAAO;IAAM,SAAS,EAAC;EAAhB,aAAP;AACD;;;;;;;;;;;;;;;;ACJD;AACA;AAEe,SAASD,MAAT,OAKZ;EAAA,IAJDwD,SAIC,QAJDA,SAIC;EAAA,IAHDZ,YAGC,QAHDA,YAGC;EAAA,IAFDoE,SAEC,QAFDA,SAEC;EAAA,IADDC,SACC,QADDA,SACC;;EACD,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;IACzBtE,YAAY,CAACoE,SAAD,CAAZ;EACD,CAFD;;EAIA,oBACE;IACE,SAAS,EAAEhI,iDAAU,CAAC,gBAAD,EAAmBwE,SAAS,IAAI,gBAAhC;EADvB,gBAGE,+DAAOyD,SAAS,GAAG,QAAH,GAAc,UAA9B,CAHF,eAIE;IAAO,SAAS,EAAC,QAAjB;IAA0B,eAAY;EAAtC,gBACE;IACE,QAAQ,EAAEzD,SADZ;IAEE,IAAI,EAAC,UAFP;IAGE,OAAO,EAAEyD,SAHX;IAIE,QAAQ,EAAEC;EAJZ,EADF,eAOE;IAAM,SAAS,EAAC;EAAhB,EAPF,CAJF,CADF;AAgBD;;;;;;;;;;;;;;;;AC7BD;AACA;AAEe,SAASzH,cAAT,OAIZ;EAAA,IAHD0H,QAGC,QAHDA,QAGC;EAAA,IAFDC,QAEC,QAFDA,QAEC;EAAA,IADDC,eACC,QADDA,eACC;EACD,oBACE;IAAK,SAAS,EAAErI,iDAAU,CAAC,iBAAD,EAAoBmI,QAApB,EAA8BE,eAA9B;EAA1B,GACGD,QADH,CADF;AAKD;;;;;;;;;;;;;;ACbD;AACA;AACA;AAEA,IAAMI,cAAc,GAAG;EACrBC,OAAO,EAAE;IACP,gBAAgB;EADT,CADY;EAIrBC,eAAe,EAAE,IAJI;EAKrBC,WAAW,EAAE;AALQ,CAAvB;;AAOA,IAAM7H,YAAY,GAAG,SAAfA,YAAe,CAAC8H,UAAD,EAAgB;EACnC,mBAYIL,wDAAW,CAAC;IAAA,IAAGtE,IAAH,QAAGA,IAAH;IAAA,IAASC,MAAT,QAASA,MAAT;IAAA,wBAAiB2E,OAAjB;IAAA,IAAiBA,OAAjB,6BAA2BD,UAAU,IAAIJ,cAAzC;IAAA,OACdF,iDAAA,CAAWpE,MAAX,EAAmBD,IAAnB,EAAyB4E,OAAzB,CADc;EAAA,CAAD,CAZf;EAAA,IACE5E,IADF,gBACEA,IADF;EAAA,IAEEqC,KAFF,gBAEEA,KAFF;EAAA,IAGEyC,OAHF,gBAGEA,OAHF;EAAA,IAIEC,MAJF,gBAIEA,MAJF;EAAA,IAKExE,SALF,gBAKEA,SALF;EAAA,IAMEyE,QANF,gBAMEA,QANF;EAAA,IAOEC,SAPF,gBAOEA,SAPF;EAAA,IAQElF,MARF,gBAQEA,MARF;EAAA,IASEmF,WATF,gBASEA,WATF;EAAA,IAUEC,KAVF,gBAUEA,KAVF;EAAA,IAWEC,MAXF,gBAWEA,MAXF;;EAeA,OAAO;IAAErF,MAAM,EAANA,MAAF;IAAUkF,SAAS,EAATA,SAAV;IAAqBjF,IAAI,EAAJA,IAArB;IAA2BO,SAAS,EAATA,SAA3B;IAAsC8B,KAAK,EAALA;EAAtC,CAAP;AACD,CAjBD;;AAkBA,+DAAexF,YAAf","sources":["webpack://espace-souvenir/./docroot/themes/custom/souvenirs/src/js/components/MailTo/MailTo.js","webpack://espace-souvenir/./docroot/themes/custom/souvenirs/src/js/components/Messages/EmptyMessagesList.js","webpack://espace-souvenir/./docroot/themes/custom/souvenirs/src/js/components/Messages/MessageItem.js","webpack://espace-souvenir/./docroot/themes/custom/souvenirs/src/js/components/Messages/MessagesList.js","webpack://espace-souvenir/./docroot/themes/custom/souvenirs/src/js/components/Messages/MessagesWithPagination.js","webpack://espace-souvenir/./docroot/themes/custom/souvenirs/src/js/components/Messages/NewMessageTag.js","webpack://espace-souvenir/./docroot/themes/custom/souvenirs/src/js/components/Switch/Switch.js","webpack://espace-souvenir/./docroot/themes/custom/souvenirs/src/js/layouts/ButtonsWrapper.js","webpack://espace-souvenir/./docroot/themes/custom/souvenirs/src/js/services/usePostQuery.js"],"sourcesContent":["import React from \"react\";\n\nimport Icon from \"../Icons/Icon\";\nimport StyledLink from \"../Link/StyledLink\";\n\nexport default function MailTo({ email, subject }) {\n  const customSubject = subject ? `?subject=${subject}` : null;\n  return (\n    <StyledLink\n      as=\"ahref\"\n      linkTo={`mailto:${email}${customSubject}`}\n      linkClass=\"link bg-transparent\"\n    >\n      <Icon name=\"envelope\" iconClass=\"current-icon envelope-icon\" />\n      <span className=\"separator\">&nbsp;</span>\n      <span className=\"link-text\">Répondre</span>\n    </StyledLink>\n  );\n}\n","import React from \"react\";\n\nexport default function EmptyMessagesList() {\n  return (\n    <div className=\"messages-wrapper\">\n      <p className=\"messages-empty-text\" data-testid=\"emptyMessageList\">\n        Il n&apos;y a pas encore de messages sur cet Espace Souvenirs\n      </p>\n    </div>\n  );\n}\n","import classNames from \"classnames\";\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport {\n  messageStatusMachineName,\n  postStatusMessageApiUrl,\n} from \"../../constants\";\nimport ButtonsWrapper from \"../../layouts/ButtonsWrapper\";\nimport {\n  capitalisedName,\n  dateHoursFormat,\n  textWithBreaks,\n  timeStampToDate,\n} from \"../../services/formatting\";\nimport usePostQuery from \"../../services/usePostQuery\";\nimport Button from \"../Button/Button\";\nimport MailTo from \"../MailTo/MailTo\";\nimport Switch from \"../Switch/Switch\";\nimport NewMessageTag from \"./NewMessageTag\";\n\nconst MessageItem = React.memo(function MessageItem({ message }) {\n  const {\n    field_message_surname: lastName,\n    field_message_name: firstName,\n    field_message_date_created: dateTime,\n    field_message_texte: body,\n    field_message_email: email,\n    field_message_photo: picture,\n    field_message_status: published,\n    field_message_banner: banner,\n    isNew,\n    message_id: id,\n  } = message;\n\n  const globalInfoState = useSelector((state) => state.globalInfo);\n  const administratorState = useSelector((state) => state.administrator);\n  const updateStatus = usePostQuery();\n\n  const [showFullMessage, setShowFullMessage] = useState(false);\n  const [isPublished, setIsPublished] = useState(published);\n\n  const messageBody = useRef(null);\n  const messageWrapper = useRef(null);\n\n  const formattedDate = useMemo(() => {\n    if (dateTime) return dateHoursFormat(timeStampToDate(dateTime));\n  }, [dateTime]);\n\n  const formattedPicture = (picture) => {\n    if (typeof picture === \"string\") {\n      return picture[0];\n    }\n    return picture[0].url;\n  };\n\n  const formatterBanner = (banner) => {\n    return `${window.location.origin}/themes/custom/souvenirs/src/assets/images/bg-images/${banner}`;\n  };\n\n  const showText = () => {\n    setShowFullMessage(true);\n  };\n\n  const subject = `Merci pour votre message en hommage à ${\n    capitalisedName(globalInfoState?.defunt?.firstName) || \"\"\n  } ${globalInfoState?.defunt?.lastName}`;\n\n  const handleSwitch = () => {\n    const statusObj = {\n      field_value: !isPublished,\n      field_machine_name: messageStatusMachineName,\n      message_id: id,\n    };\n    try {\n      updateStatus.mutate(\n        { data: statusObj, apiUrl: postStatusMessageApiUrl },\n        {\n          onSuccess: ({ data }) => {\n            setIsPublished(data?.field_value);\n          },\n        },\n      );\n    } catch {\n      setIsPublished(published);\n    }\n  };\n\n  useEffect(() => {\n    if (messageBody.current && messageWrapper.current) {\n      if (\n        messageBody.current.clientHeight > messageWrapper.current.clientHeight\n      ) {\n        setShowFullMessage(false);\n      } else {\n        setShowFullMessage(true);\n      }\n    }\n  }, []);\n\n  return (\n    <li\n      className={classNames(\"message-item\", {\n        \"message-item-long\": picture || banner,\n      })}\n    >\n      {isNew && <NewMessageTag />}\n      {picture && (\n        <div className=\"message-item-image-wrapper\">\n          <img\n            alt=\"\"\n            className=\"message-item-image\"\n            loading=\"lazy\"\n            src={formattedPicture(picture)}\n          />\n        </div>\n      )}\n      {banner && (\n        <div className=\"message-item-image-wrapper\">\n          <img\n            alt=\"\"\n            className=\"message-item-image\"\n            loading=\"lazy\"\n            src={formatterBanner(banner)}\n          />\n        </div>\n      )}\n      <div\n        className={classNames(\"message-author\", {\n          \"mt-50\": !picture,\n          \"mt-20\": picture,\n        })}\n      >\n        <p data-testid=\"writtenby-message\">\n          Ecrit par <span className=\"info-firstname\">{firstName}</span>{\" \"}\n          <span className=\"info-lastname\">{lastName}</span>\n        </p>\n        <p>{formattedDate}</p>\n      </div>\n      {body && (\n        <div\n          ref={messageWrapper}\n          className={classNames(\"message-body\", {\n            open: showFullMessage,\n          })}\n        >\n          <p ref={messageBody}>{textWithBreaks(body)}</p>\n        </div>\n      )}\n\n      {!showFullMessage && (\n        <ButtonsWrapper>\n          <Button\n            type=\"button\"\n            onClickAction={showText}\n            btnClass=\"bg-transparent\"\n          >\n            Lire la suite\n            <span className=\"sr-only\">\n              du message envoyé par {firstName} {lastName}\n            </span>\n          </Button>\n        </ButtonsWrapper>\n      )}\n\n      {administratorState?.isAdmin && (\n        <ButtonsWrapper position=\"space-between\">\n          <Switch\n            isLoading={updateStatus.isLoading}\n            handleSwitch={handleSwitch}\n            messageId={dateTime}\n            isChecked={isPublished}\n          />\n          <MailTo email={email} subject={subject} />\n        </ButtonsWrapper>\n      )}\n    </li>\n  );\n});\nexport default MessageItem;\n","import { arrayOf } from \"prop-types\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\n\nimport {\n  accueil,\n  cachetimeForSearchQuery,\n  getMessagesApi,\n  getNumberMessagesUrl,\n  messagesAccueilKey,\n  messagesListKey,\n  numberMessagesKey,\n} from \"../../constants\";\nimport { messagesNumberReceived } from \"../../context/messageSlice\";\nimport scrollSmoothToElement from \"../../services/scrollSmoothToElement\";\nimport useGetQuery from \"../../services/useGetQuery\";\nimport Icon from \"../Icons/Icon\";\nimport MessagesLoader from \"../Loader/MessagesLoader\";\nimport EmptyMessagesList from \"./EmptyMessagesList\";\nimport MessageItem from \"./MessageItem\";\nimport MessagesWithPagination from \"./MessagesWithPagination\";\n\nexport default function MessagesList({ page }) {\n  const [hasError, setHasError] = useState(false);\n  const administratorState = useSelector((state) => state.administrator);\n  const { espaceId } = useParams();\n  const dispatch = useDispatch();\n\n  const messagesApi =\n    page === accueil\n      ? `${getMessagesApi}?entity_hash=${espaceId}&msg_number=2`\n      : `${getMessagesApi}?entity_hash=${espaceId}`;\n  const messagesApiKey =\n    page === accueil ? messagesAccueilKey : messagesListKey;\n\n  const {\n    data: messagesData,\n    error: messagesError,\n    isFetching: messagesIsFetching,\n  } = useGetQuery({\n    key: messagesApiKey,\n    API: messagesApi,\n    staleTime: administratorState.isAdmin ? 500 : 50000,\n    cacheTime: administratorState.isAdmin ? 0 : cachetimeForSearchQuery,\n    refetchOnMount: administratorState.isAdmin,\n  });\n\n  const { data: numberMessagesData } = useGetQuery({\n    key: numberMessagesKey,\n    API: `${getNumberMessagesUrl}?entity_hash=${espaceId}`,\n    staleTime: 0,\n    cacheTime: 0,\n    enabled: administratorState.isAdmin,\n  });\n\n  useEffect(() => {\n    if (administratorState.isAdmin) {\n      dispatch(\n        messagesNumberReceived({\n          messagesNumber: +numberMessagesData?.new_message_number,\n        }),\n      );\n    }\n    if (messagesData?.error) {\n      setHasError(true);\n    }\n    return () => {\n      if (page !== accueil && administratorState.isAdmin) {\n        dispatch(messagesNumberReceived({ messagesNumber: 0 }));\n      }\n    };\n  }, [numberMessagesData]);\n\n  if (messagesIsFetching) return <MessagesLoader />;\n\n  if (messagesError || hasError) {\n    return (\n      <div className=\"messages-wrapper\">\n        <p className=\"message-status\">\n          <Icon name=\"cross\" iconClass=\"message-status-icon error-icon\" />\n          <span>\n            Une erreur s&apos;est produite. Nous vous invitons à réessayer plus\n            tard.\n          </span>\n        </p>\n      </div>\n    );\n  }\n\n  if (messagesData && messagesData?.result) {\n    const arrayOfMessages = messagesData.result;\n    const newMessagesArray = administratorState?.isAdmin\n      ? arrayOfMessages.map((message) => {\n          return {\n            ...message,\n            isNew:\n              messagesData?.msg_date_last_consult * 1000 <\n              +message.field_message_date_created * 1000,\n          };\n        })\n      : arrayOfMessages;\n    if (newMessagesArray && newMessagesArray.length > 8) {\n      return <MessagesWithPagination messages={newMessagesArray} />;\n    }\n    if (messagesData?.result?.length === 0 || newMessagesArray?.length === 0) {\n      return <EmptyMessagesList />;\n    }\n    return (\n      <div className=\"messages-wrapper\">\n        <ul className=\"messages-list\" data-testid=\"messagesList\">\n          {newMessagesArray.map((message) => {\n            return <MessageItem key={message?.message_id} message={message} />;\n          })}\n        </ul>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"messages-wrapper\">\n      <MessagesLoader />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useQueryClient } from \"react-query\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { messagesPerPage, numberMessagesKey } from \"../../constants\";\nimport { messagesViewed } from \"../../context/messageSlice\";\nimport ButtonsWrapper from \"../../layouts/ButtonsWrapper\";\nimport { slicedArray } from \"../../services/formatting\";\nimport Button from \"../Button/Button\";\nimport Icon from \"../Icons/Icon\";\nimport MessageItem from \"./MessageItem\";\n\nexport default function MessagesWithPagination({ messages }) {\n  const dispatch = useDispatch();\n  const queryClient = useQueryClient();\n  const messagesState = useSelector((state) => state.messages);\n  const firstMessagesArray = messagesState.messagesViewed.length\n    ? messagesState.messagesViewed\n    : slicedArray(messages, 0, messagesPerPage);\n  const [messagesList, setMessagesList] = useState(firstMessagesArray);\n\n  const viewMoreMessages = () => {\n    let begin = messagesList.length;\n    let end = begin + messagesPerPage;\n    const newMessagesArray = [\n      ...messagesList,\n      ...slicedArray(messages, begin, end),\n    ];\n\n    setMessagesList(newMessagesArray);\n    dispatch(messagesViewed({ messagesViewed: newMessagesArray }));\n  };\n\n  return (\n    <div className=\"messages-wrapper\">\n      <ul className=\"messages-list\" data-testid=\"messagesWithPaginationList\">\n        {messagesList.map((message) => {\n          return <MessageItem key={message?.message_id} message={message} />;\n        })}\n      </ul>\n      <p className=\"messages-number-view\">\n        <label htmlFor=\"messages-progress\">\n          Vous avez vu {messagesList.length} messages sur {messages.length}\n        </label>\n\n        <progress\n          id=\"messages-progress\"\n          className=\"messages-progress\"\n          max={messages.length}\n          value={messagesList.length}\n        ></progress>\n      </p>\n      {messages.length > messagesList.length && (\n        <ButtonsWrapper position=\"center\" btnWrapperClass=\"mt-30\">\n          <Button\n            type=\"button\"\n            btnClass=\"bg-white\"\n            onClickAction={viewMoreMessages}\n          >\n            <span className=\"button-text\">voir plus de messages</span>\n            <span className=\"separator\">&nbsp;</span>\n            <Icon name=\"next\" iconClass=\"current-icon\" />\n          </Button>\n        </ButtonsWrapper>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function NewMessageTag() {\n  return <span className=\"new-message-tag\">nouveau</span>;\n}\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nexport default function Switch({\n  isLoading,\n  handleSwitch,\n  messageId,\n  isChecked,\n}) {\n  const handleswitch = () => {\n    handleSwitch(messageId);\n  };\n\n  return (\n    <div\n      className={classNames(\"switch-wrapper\", isLoading && \"loading-status\")}\n    >\n      <span>{isChecked ? \"Publié\" : \"Dépublié\"}</span>\n      <label className=\"switch\" data-testid=\"switchCheck\">\n        <input\n          disabled={isLoading}\n          type=\"checkbox\"\n          checked={isChecked}\n          onChange={handleswitch}\n        />\n        <span className=\"slider\"></span>\n      </label>\n    </div>\n  );\n}\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nexport default function ButtonsWrapper({\n  position,\n  children,\n  btnWrapperClass,\n}) {\n  return (\n    <div className={classNames(\"buttons-wrapper\", position, btnWrapperClass)}>\n      {children}\n    </div>\n  );\n}\n","import axios from \"axios\";\nimport React from \"react\";\nimport { useMutation } from \"react-query\";\n\nconst defaultOptions = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n  withCredentials: true,\n  credentials: \"include\",\n};\nconst usePostQuery = (parameters) => {\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isPaused,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n  } = useMutation(({ data, apiUrl, options = parameters || defaultOptions }) =>\n    axios.post(apiUrl, data, options),\n  );\n  return { mutate, isSuccess, data, isLoading, error };\n};\nexport default usePostQuery;\n"],"names":["React","Icon","StyledLink","MailTo","email","subject","customSubject","EmptyMessagesList","classNames","useEffect","useMemo","useRef","useState","useDispatch","useSelector","messageStatusMachineName","postStatusMessageApiUrl","ButtonsWrapper","capitalisedName","dateHoursFormat","textWithBreaks","timeStampToDate","usePostQuery","Button","Switch","NewMessageTag","MessageItem","memo","message","lastName","field_message_surname","firstName","field_message_name","dateTime","field_message_date_created","body","field_message_texte","field_message_email","picture","field_message_photo","published","field_message_status","banner","field_message_banner","isNew","id","message_id","globalInfoState","state","globalInfo","administratorState","administrator","updateStatus","showFullMessage","setShowFullMessage","isPublished","setIsPublished","messageBody","messageWrapper","formattedDate","formattedPicture","url","formatterBanner","window","location","origin","showText","defunt","handleSwitch","statusObj","field_value","field_machine_name","mutate","data","apiUrl","onSuccess","current","clientHeight","open","isAdmin","isLoading","arrayOf","useParams","accueil","cachetimeForSearchQuery","getMessagesApi","getNumberMessagesUrl","messagesAccueilKey","messagesListKey","numberMessagesKey","messagesNumberReceived","scrollSmoothToElement","useGetQuery","MessagesLoader","MessagesWithPagination","MessagesList","page","hasError","setHasError","espaceId","dispatch","messagesApi","messagesApiKey","key","API","staleTime","cacheTime","refetchOnMount","messagesData","messagesError","error","messagesIsFetching","isFetching","enabled","numberMessagesData","messagesNumber","new_message_number","result","arrayOfMessages","newMessagesArray","map","msg_date_last_consult","length","useQueryClient","messagesPerPage","messagesViewed","slicedArray","messages","queryClient","messagesState","firstMessagesArray","messagesList","setMessagesList","viewMoreMessages","begin","end","messageId","isChecked","handleswitch","position","children","btnWrapperClass","axios","useMutation","defaultOptions","headers","withCredentials","credentials","parameters","options","post","isError","isIdle","isPaused","isSuccess","mutateAsync","reset","status"],"sourceRoot":""}