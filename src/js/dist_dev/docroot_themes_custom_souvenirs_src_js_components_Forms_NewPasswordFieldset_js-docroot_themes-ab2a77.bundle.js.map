{"version":3,"file":"docroot_themes_custom_souvenirs_src_js_components_Forms_NewPasswordFieldset_js-docroot_themes-ab2a77.bundle.js","mappings":"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","sources":["webpack://espace-souvenir/./docroot/themes/custom/souvenirs/src/js/components/Forms/FormInput.js","webpack://espace-souvenir/./docroot/themes/custom/souvenirs/src/js/components/Forms/NewPasswordFieldset.js","webpack://espace-souvenir/./docroot/themes/custom/souvenirs/src/js/components/Icons/PasswordCheckIcon.js","webpack://espace-souvenir/./docroot/themes/custom/souvenirs/src/js/layouts/ButtonsWrapper.js","webpack://espace-souvenir/./docroot/themes/custom/souvenirs/src/js/services/useForm.js","webpack://espace-souvenir/./docroot/themes/custom/souvenirs/src/js/services/usePostQuery.js"],"sourcesContent":["import classNames from \"classnames\";\nimport React from \"react\";\nimport { renderToStaticMarkup } from \"react-dom/server\";\n\nimport Icon from \"../Icons/Icon\";\n\nconst FormInput = React.memo(function FormInput({\n  id,\n  name,\n  imageName,\n  labelText,\n  labelImage,\n  type,\n  value,\n  autocomplete,\n  min,\n  max,\n  checked,\n  inputClass,\n  wrapperClass,\n  onInputChange,\n  onInputBlur,\n  inputPlaceholder,\n  error,\n  displayErrorMessage = true,\n  isRequired,\n  disabled,\n  readOnly = false,\n  ariaDescription,\n}) {\n  const svgString = encodeURIComponent(\n    renderToStaticMarkup(\n      <Icon name=\"cross-red\" iconClass=\"input-error-icon\" />,\n    ),\n  );\n  const dataUri = `url(\"data:image/svg+xml,${svgString}\")`;\n  const optionalInput = !isRequired && (\n    <span className=\"optional-label\">&nbsp;(facultatif)</span>\n  );\n  return (\n    <div className={classNames(\"input-wrapper\", wrapperClass)}>\n      {/* Si type = text */}\n      {!labelImage && type !== \"checkbox\" && (\n        <label\n          htmlFor={id}\n          className={classNames(\"label\", {\n            \"label-error\": error,\n          })}\n        >\n          {labelText}\n          {optionalInput}\n        </label>\n      )}\n      <input\n        id={id}\n        type={type}\n        name={name}\n        readOnly={readOnly}\n        data-imagename={imageName}\n        className={classNames(\"input\", {\n          \"input-error\": error,\n          inputClass,\n        })}\n        style={{\n          backgroundImage: error ? dataUri : \"none\",\n        }}\n        value={value}\n        min={min}\n        autoComplete={autocomplete ? autocomplete : null}\n        maxLength={max ? max : null}\n        disabled={disabled}\n        required={isRequired}\n        aria-required={isRequired}\n        aria-describedby={\n          error ? `error-${id} ${ariaDescription}` : ariaDescription\n        }\n        aria-invalid={error ? \"true\" : false}\n        onChange={onInputChange}\n        onBlur={onInputBlur}\n        checked={type === \"radio\" ? checked : null}\n        placeholder={inputPlaceholder || \"\"}\n      />\n      {/* Si type = radio avec image comme label */}\n      {labelImage && (\n        <label\n          htmlFor={id}\n          className={classNames(\"label\", {\n            \"label-error\": error,\n          })}\n        >\n          <img src={labelImage} className=\"label-image\" alt=\"\" width=\"150\" />\n        </label>\n      )}\n      {/* Si type = checkbox sans images */}\n      {type === \"checkbox\" && (\n        <label\n          htmlFor={id}\n          className={classNames(\"label\", {\n            \"label-error\": error,\n          })}\n        >\n          {labelText}\n        </label>\n      )}\n      {error && displayErrorMessage && (\n        <p className=\"error-message\" id={`error-${id}`} aria-live=\"polite\">\n          {error}\n        </p>\n      )}\n    </div>\n  );\n});\n\nexport default FormInput;\n","import React from \"react\";\n\nimport PasswordCheckIcon from \"../Icons/PasswordCheckIcon\";\nimport FormInput from \"./FormInput\";\n\nexport default function NewPasswordFieldset({\n  inputValues,\n  changeHandler,\n  errorHandler,\n  errors,\n  includeCurrentPassword = false,\n  requiredNewPassword = false,\n}) {\n  const isIncorrectValue = (pattern) => {\n    if (inputValues.new_password === \"\") {\n      return null;\n    }\n    if (!errors?.new_password || errors?.new_password?.length === 0)\n      return <PasswordCheckIcon isValid={true} />;\n\n    return (\n      <PasswordCheckIcon\n        isValid={!errors.new_password.includes(pattern)}\n        error={errors.new_password.includes(pattern) && pattern}\n      />\n    );\n  };\n\n  const handleNewPassword = (e) => {\n    errorHandler(e);\n    changeHandler(e);\n  };\n  return (\n    <>\n      {includeCurrentPassword && (\n        <FormInput\n          id=\"current_password\"\n          name=\"current_password\"\n          labelText=\"Mot de passe actuel\"\n          type=\"password\"\n          autocomplete=\"current-password\"\n          value={inputValues.current_password}\n          inputPlaceholder=\"Mot de passe actuel\"\n          onInputChange={changeHandler}\n          onInputBlur={errorHandler}\n          error={errors.current_password}\n        />\n      )}\n      <FormInput\n        id=\"new_password\"\n        name=\"new_password\"\n        labelText=\"Nouveau mot de passe\"\n        type=\"password\"\n        autocomplete=\"new-password\"\n        value={inputValues.new_password}\n        inputPlaceholder=\"Nouveau mot de passe\"\n        onInputChange={handleNewPassword}\n        onInputBlur={errorHandler}\n        displayErrorMessage={false}\n        isRequired={requiredNewPassword}\n        error={errors.new_password}\n        ariaDescription=\"new_password_requirement\"\n      />\n      <FormInput\n        id=\"repeat_new_password\"\n        name=\"repeat_new_password\"\n        labelText=\"Confirmer votre mot de passe\"\n        type=\"password\"\n        value={inputValues.repeat_new_password}\n        inputPlaceholder=\"Confirmer votre mot de passe\"\n        onInputChange={changeHandler}\n        onInputBlur={errorHandler}\n        isRequired={requiredNewPassword}\n        error={errors.repeat_new_password}\n      />\n      <span className=\"sr-only\" id=\"new_password_requirement\">\n        l faut un minimum de 8 caractères avec au moins une majuscule, un\n        chiffre et un caractère spécial.\n      </span>\n      <p\n        className=\"password-check\"\n        aria-live=\"polite\"\n        id=\"error-new_password\"\n        aria-relevant=\"additions\"\n      >\n        <span aria-hidden=\"true\">Il faut un minimum de </span>\n        <span className=\"password-check-item\">\n          <span aria-hidden=\"true\">8 caractères avec au moins</span>{\" \"}\n          {isIncorrectValue(\"patternLength\")}\n        </span>\n        <span className=\"password-check-item\">\n          <span aria-hidden=\"true\">1 majuscule</span>{\" \"}\n          {isIncorrectValue(\"patternMaj\")}\n        </span>\n        <span className=\"password-check-item\">\n          <span aria-hidden=\"true\">1 chiffre</span>{\" \"}\n          {isIncorrectValue(\"patternNumber\")}\n        </span>\n        <span className=\"password-check-item\">\n          <span aria-hidden=\"true\">1 caractère spécial</span>{\" \"}\n          {isIncorrectValue(\"patternSpecialChar\")}\n        </span>\n      </p>\n    </>\n  );\n}\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport Icon from \"./Icon\";\n\nconst passwordErrors = {\n  patternNumber: \"Il manque un chiffre\",\n  patternLength: \"Le mot de passe n'est pas assez long\",\n  patternMaj: \"Il manque une majuscule\",\n  patternSpecialChar: \"Il manque un caractère spécial\",\n};\n\nexport default function PasswordCheckIcon({ isValid, error }) {\n  return (\n    <span>\n      <Icon\n        name={isValid ? \"check\" : \"cross\"}\n        iconClass={classNames(\n          \"password-validation-icon\",\n          isValid ? \"green\" : \"red\",\n        )}\n      ></Icon>\n      {error && <span className=\"sr-only\">{passwordErrors[error]}</span>}\n    </span>\n  );\n}\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nexport default function ButtonsWrapper({\n  position,\n  children,\n  btnWrapperClass,\n}) {\n  return (\n    <div className={classNames(\"buttons-wrapper\", position, btnWrapperClass)}>\n      {children}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\nexport default function useForm({ initialFormState, validationValues }) {\n  const [inputValues, setValues] = useState(initialFormState);\n  const [errors, setErrors] = useState({});\n  const [isValid, setIsValid] = useState(true);\n\n  /** on vérifie au onBlur si le pattern correspond à la saisie,\n   * si ce n'est pas le cas, retourne le message d'erreur, sinon on retourne null  */\n  const getError = (target) => {\n    if (target.value !== \"\") {\n      const { pattern } = validationValues[target.name];\n      const { patterns } = validationValues[target.name];\n      if (pattern?.value && !RegExp(pattern.value).test(target.value)) {\n        return pattern?.message;\n      }\n      if (patterns) {\n        const arrayOfPatterns = patterns.map((pattern) => {\n          if (pattern.value && !RegExp(pattern.value).test(target.value)) {\n            return pattern.name;\n          }\n        });\n        const noNullValues = arrayOfPatterns.filter((value) => !!value);\n        if (noNullValues.length) {\n          return noNullValues;\n        } else {\n          return null;\n        }\n      }\n      return null;\n    }\n    if (target.getAttribute(\"required\") !== null && target.value === \"\") {\n      const { required } = validationValues[target.name];\n      return required;\n    }\n    return null;\n  };\n\n  /**\n   * Ici on ajoute les valeurs des champs dans le state du formulaire.\n   * au onChange on vérifie si la saisie est bonne et retire le message d'erreur\n   * @param {event} event target, le champs input\n   */\n  const changeHandler = ({ target }) => {\n    const newValues = { ...inputValues, [target.name]: target.value };\n    if (!getError(target)) {\n      if (Object.prototype.hasOwnProperty.call(errors, target.name)) {\n        const { [target.name]: newProp, ...rest } = errors;\n        setErrors(rest);\n      }\n    }\n    if (Object.keys(errors).length === 0) setIsValid(true);\n    setValues(newValues);\n  };\n\n  /**\n   * @param {event} event target, le champs input\n   */\n  const errorHandler = ({ target }) => {\n    let newErrors = {};\n    if (getError(target)) {\n      setIsValid(false);\n      newErrors = { ...errors, [target.name]: getError(target) };\n    } else {\n      newErrors = { ...errors };\n    }\n    setErrors(newErrors);\n  };\n\n  const submitErrorsHandler = (fields) => {\n    const newErrors = {};\n    let requiredMessage = null;\n    fields.forEach((field) => {\n      if (field.requiredMessage) {\n        requiredMessage = field.requiredMessage;\n      } else {\n        requiredMessage = validationValues[field]?.required;\n      }\n      !field.requiredMessage\n        ? (newErrors[field] = requiredMessage)\n        : (newErrors[field.name] = requiredMessage);\n    });\n    setIsValid(false);\n    setErrors(newErrors);\n  };\n\n  return {\n    inputValues,\n    changeHandler,\n    errorHandler,\n    submitErrorsHandler,\n    errors,\n    isValid,\n  };\n}\n","import axios from \"axios\";\nimport React from \"react\";\nimport { useMutation } from \"react-query\";\n\nconst defaultOptions = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n  withCredentials: true,\n  credentials: \"include\",\n};\nconst usePostQuery = (parameters) => {\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isPaused,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n  } = useMutation(({ data, apiUrl, options = parameters || defaultOptions }) =>\n    axios.post(apiUrl, data, options),\n  );\n  return { mutate, isSuccess, data, isLoading, error };\n};\nexport default usePostQuery;\n"],"names":["classNames","React","renderToStaticMarkup","Icon","FormInput","memo","id","name","imageName","labelText","labelImage","type","value","autocomplete","min","max","checked","inputClass","wrapperClass","onInputChange","onInputBlur","inputPlaceholder","error","displayErrorMessage","isRequired","disabled","readOnly","ariaDescription","svgString","encodeURIComponent","dataUri","optionalInput","backgroundImage","PasswordCheckIcon","NewPasswordFieldset","inputValues","changeHandler","errorHandler","errors","includeCurrentPassword","requiredNewPassword","isIncorrectValue","pattern","new_password","length","includes","handleNewPassword","e","current_password","repeat_new_password","passwordErrors","patternNumber","patternLength","patternMaj","patternSpecialChar","isValid","ButtonsWrapper","position","children","btnWrapperClass","useState","useForm","initialFormState","validationValues","setValues","setErrors","setIsValid","getError","target","patterns","RegExp","test","message","arrayOfPatterns","map","noNullValues","filter","getAttribute","required","newValues","Object","prototype","hasOwnProperty","call","newProp","rest","keys","newErrors","submitErrorsHandler","fields","requiredMessage","forEach","field","axios","useMutation","defaultOptions","headers","withCredentials","credentials","usePostQuery","parameters","data","apiUrl","options","post","isError","isIdle","isLoading","isPaused","isSuccess","mutate","mutateAsync","reset","status"],"sourceRoot":""}