{"version":3,"file":"Biography.bundle.js","mappings":"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","sources":["webpack://espace-souvenir/./docroot/themes/custom/souvenirs/src/js/components/Biography/BiographyText.js","webpack://espace-souvenir/./docroot/themes/custom/souvenirs/src/js/components/ContentPages/Biography.js","webpack://espace-souvenir/./docroot/themes/custom/souvenirs/src/js/layouts/ButtonsWrapper.js","webpack://espace-souvenir/./docroot/themes/custom/souvenirs/src/js/services/usePostQuery.js"],"sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { decoded, textWithBreaks } from \"../../services/formatting\";\n\nexport default function BiographyText() {\n  const biographyState = useSelector((state) => state.biography);\n\n  return (\n    <div className=\"biography-wrapper\">\n      <p className=\"biography-body\" data-testid=\"biographyText\">\n        {textWithBreaks(decoded(biographyState?.biography))}\n      </p>\n    </div>\n  );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\n\nimport { bioMachineName, postSaveFieldApiUrl } from \"../../constants\";\nimport { biographyUpdated } from \"../../context/biographySlice\";\nimport ButtonsWrapper from \"../../layouts/ButtonsWrapper\";\nimport scrollSmoothToElement from \"../../services/scrollSmoothToElement\";\nimport usePostQuery from \"../../services/usePostQuery\";\nimport BiographyText from \"../Biography/BiographyText\";\nimport Button from \"../Button/Button\";\nimport Icon from \"../Icons/Icon\";\n\nconst BiographyForm = React.lazy(() =>\n  import(/* webpackChunkName: \"BiographyForm\" */ \"../Forms/BiographyForm\"),\n);\n\nexport default function Biography() {\n  const administratorState = useSelector((state) => state.administrator);\n  const biographyState = useSelector((state) => state.biography);\n  const dispatch = useDispatch();\n  const params = useParams();\n  const [isEditing, setIsEditing] = useState(false);\n  const [biographySuccess, setBiographySuccess] = useState(false);\n  const [networkError, setNetworkError] = useState(null);\n  const deleteBiography = usePostQuery();\n  const form = useRef();\n  const messagesTitle = useRef();\n  const networkErrorMessage = useRef(null);\n  const handleOpenForm = () => {\n    setIsEditing(true);\n  };\n  const handleDeleteBiography = async () => {\n    const biography_obj = {\n      field_value: {\n        field_bio_story: \"\",\n        field_bio_photo: null,\n      },\n      field_machine_name: bioMachineName,\n      entity_hash: params.espaceId,\n    };\n    try {\n      deleteBiography.mutate(\n        { data: biography_obj, apiUrl: postSaveFieldApiUrl },\n        {\n          onSuccess: (data) => {\n            const { field_bio_story, field_bio_custom } = JSON.parse(\n              data?.data?.field_value,\n            );\n            dispatch(\n              biographyUpdated({\n                biography: field_bio_story,\n                isBiographyEdited: field_bio_custom,\n              }),\n            );\n          },\n          onError: (err) => {\n            setNetworkError(\n              \"Une erreur s'est produite. Merci de réessayer plus tard\",\n            );\n            networkErrorMessage?.current &&\n              scrollSmoothToElement(networkErrorMessage.current);\n          },\n        },\n      );\n    } catch {\n      setNetworkError(\n        \"Une erreur s'est produite. Merci de réessayer plus tard\",\n      );\n      networkErrorMessage?.current &&\n        scrollSmoothToElement(networkErrorMessage.current);\n      // Something went wrong\n    }\n  };\n\n  const getBiographyAction = () => {\n    if (\n      biographyState?.isBiographyEdited &&\n      biographyState?.biography &&\n      administratorState?.isAdmin\n    ) {\n      return (\n        <ButtonsWrapper btnWrapperClass=\"width-auto\">\n          <Button\n            type=\"button\"\n            btnClass=\"bg-white\"\n            onClickAction={handleDeleteBiography}\n          >\n            <Icon name=\"corbeille\" iconClass=\"current-icon\" />\n            <span className=\"separator\">&nbsp;</span>\n            <span className=\"button-text\">Supprimer</span>\n          </Button>\n          <Button\n            type=\"button\"\n            btnClass=\"bg-current\"\n            onClickAction={handleOpenForm}\n          >\n            <Icon name=\"pencil\" iconClass=\"white-icon\" />\n            <span className=\"separator\">&nbsp;</span>\n            <span className=\"button-text\">Modifier la biographie</span>\n          </Button>\n        </ButtonsWrapper>\n      );\n    }\n    if (!biographyState?.isBiographyEdited && administratorState?.isAdmin) {\n      return (\n        <Button\n          type=\"button\"\n          btnClass=\"bg-current\"\n          onClickAction={handleOpenForm}\n        >\n          <span className=\"button-text\">Écrire la biographie</span>\n          <span className=\"separator\">&nbsp;</span>\n          <Icon name=\"next\" iconClass=\"white-icon\" />\n        </Button>\n      );\n    }\n    return null;\n  };\n\n  const handlCloseForm = ({ messageSent }) => {\n    setBiographySuccess(messageSent);\n    setIsEditing(false);\n  };\n\n  /*   useEffect(() => {\n    if (form.current) {\n      form.current.scrollIntoView();\n    }\n    if (messagesTitle.current) {\n      messagesTitle.current.scrollIntoView();\n    }\n  }, [isEditing]); */\n\n  if (isEditing) {\n    return <BiographyForm closeForm={handlCloseForm} reference={form} />;\n  }\n\n  return (\n    <>\n      {biographySuccess && (\n        <p className=\"message-status mb-40\">\n          <Icon name=\"check\" iconClass=\"message-status-icon\" />\n          <span>La biographie a bien été mise à jour.</span>\n        </p>\n      )}\n      {networkError && (\n        <p ref={networkErrorMessage} className=\"message-status mb-40\">\n          <Icon name=\"cross\" iconClass=\"message-status-icon error-icon\" />\n          <span>{networkError}</span>\n        </p>\n      )}\n      <div className=\"heading-button-wrapper between\">\n        <h2 className=\"content-heading-2\" ref={messagesTitle}>\n          Biographie\n        </h2>\n        {getBiographyAction()}\n      </div>\n      {biographyState?.biography && <BiographyText />}\n    </>\n  );\n}\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nexport default function ButtonsWrapper({\n  position,\n  children,\n  btnWrapperClass,\n}) {\n  return (\n    <div className={classNames(\"buttons-wrapper\", position, btnWrapperClass)}>\n      {children}\n    </div>\n  );\n}\n","import axios from \"axios\";\nimport React from \"react\";\nimport { useMutation } from \"react-query\";\n\nconst defaultOptions = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n  withCredentials: true,\n  credentials: \"include\",\n};\nconst usePostQuery = (parameters) => {\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isPaused,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n  } = useMutation(({ data, apiUrl, options = parameters || defaultOptions }) =>\n    axios.post(apiUrl, data, options),\n  );\n  return { mutate, isSuccess, data, isLoading, error };\n};\nexport default usePostQuery;\n"],"names":["React","useSelector","decoded","textWithBreaks","BiographyText","biographyState","state","biography","useEffect","useRef","useState","useDispatch","useParams","bioMachineName","postSaveFieldApiUrl","biographyUpdated","ButtonsWrapper","scrollSmoothToElement","usePostQuery","Button","Icon","BiographyForm","lazy","Biography","administratorState","administrator","dispatch","params","isEditing","setIsEditing","biographySuccess","setBiographySuccess","networkError","setNetworkError","deleteBiography","form","messagesTitle","networkErrorMessage","handleOpenForm","handleDeleteBiography","biography_obj","field_value","field_bio_story","field_bio_photo","field_machine_name","entity_hash","espaceId","mutate","data","apiUrl","onSuccess","JSON","parse","field_bio_custom","isBiographyEdited","onError","err","current","getBiographyAction","isAdmin","handlCloseForm","messageSent","classNames","position","children","btnWrapperClass","axios","useMutation","defaultOptions","headers","withCredentials","credentials","parameters","options","post","error","isError","isIdle","isLoading","isPaused","isSuccess","mutateAsync","reset","status"],"sourceRoot":""}