{"version":3,"file":"LogoutMenu.bundle.js","mappings":"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","sources":["webpack://espace-souvenir/./docroot/themes/custom/souvenirs/src/js/components/Header/LogoutMenu.js","webpack://espace-souvenir/./docroot/themes/custom/souvenirs/src/js/components/Link/StyledLink.js"],"sourcesContent":["import axios from \"axios\";\nimport classNames from \"classnames\";\nimport React, { useMemo, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { mainMenu } from \"../../constants\";\nimport { userLoggedOut } from \"../../context/administratorSlice\";\nimport useGetQuery from \"../../services/useGetQuery\";\nimport Icon from \"../Icons/Icon\";\nimport StyledLink from \"../Link/StyledLink\";\nimport Loader from \"../Loader/Loader\";\n\nexport default function LogoutMenu() {\n  const administratorState = useSelector((state) => state.administrator);\n  const dispatch = useDispatch();\n  const [isDropdownOpen, setDropdownOpen] = useState(false);\n  const [isLoader, setIsLoader] = useState(false);\n  /*   const { data, error, isFetching } = useGetQuery({\n    key: \"main-menu\",\n    API: mainMenu,\n    staleTime: 300000,\n    cacheTime: Infinity,\n  }); */\n\n  const handleLogOut = () => {\n    const currentWindow = window.location.pathname;\n    const options = {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      withCredentials: true,\n    };\n    setIsLoader(true);\n    axios.post(\"/user/logout\", null, options).then(() => {\n      dispatch(userLoggedOut());\n      window.location.reload();\n    });\n  };\n\n  const handleDropdownMenu = (e) => {\n    const button = e.currentTarget;\n    setDropdownOpen(!isDropdownOpen);\n    if (button.nodeName === \"BUTTON\") {\n      button.setAttribute(\"aria-expanded\", !isDropdownOpen);\n    }\n  };\n\n  const getUserName = () => {\n    const lastName = administratorState?.currentUser?.lastName || null;\n    return lastName;\n  };\n  const getCivility = () => {\n    const civility = administratorState?.currentUser?.civility || null;\n    return civility;\n  };\n\n  /*   const getFetchedItems = (items) => {\n    return items.map((item) => {\n      return (\n        <li key={item.title}>\n          <StyledLink linkTo={item.url} linkClass=\"bg-transparent\">\n            {item.title}\n          </StyledLink>\n        </li>\n      );\n    });\n  }; */\n\n  return (\n    <div\n      className={classNames(\"dropdown\", {\n        open: isDropdownOpen,\n      })}\n    >\n      <button\n        className=\"dropdown-toggle loggedIn-button\"\n        onClick={handleDropdownMenu}\n        type=\"button\"\n        id=\"dropdownMenu1\"\n        data-toggle=\"dropdown\"\n        aria-expanded=\"false\"\n        data-testid=\"logoutButton\"\n      >\n        <Icon name=\"userfill\" iconClass=\"user-icon\" />\n\n        <span className=\"user-login-username\">\n          <span className=\"user-login-welcome\">Bonjour &nbsp;</span>\n          {getCivility()} {getUserName()}\n        </span>\n        <Icon\n          name=\"chevron\"\n          iconClass={classNames(\"toggle-menu-icon\", {\n            open: isDropdownOpen,\n          })}\n        />\n      </button>\n      <ul\n        className={classNames(\"dropdown-menu\", {\n          active: isDropdownOpen,\n        })}\n        data-testid=\"dropdownMainMenu\"\n      >\n        {/*         {data && data.length > 0 && getFetchedItems(data)} */}\n        <li>\n          <div className=\"button-loader-wrapper\">\n            <button\n              data-testid=\"logoutLink\"\n              type=\"button\"\n              className=\"dropdown-item\"\n              onClick={handleLogOut}\n            >\n              <Icon name=\"logout\" iconClass=\"logout-icon\" />\n              <span className=\"dropdown-item-text\">Se d√©connecter</span>\n            </button>\n            {isLoader && <Loader />}\n          </div>\n        </li>\n      </ul>\n    </div>\n  );\n}\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n/* import './link.scss'; */\n\nexport default function StyledLink({\n  children,\n  linkClass,\n  as = \"link\",\n  linkTo,\n  target,\n  dataTestid,\n}) {\n  if (as === \"ahref\") {\n    return (\n      <a\n        href={linkTo}\n        target={target}\n        data-testid={dataTestid}\n        className={linkClass}\n      >\n        {children}\n      </a>\n    );\n  }\n\n  return (\n    <Link to={linkTo} className={linkClass}>\n      {children}\n    </Link>\n  );\n}\n\nStyledLink.defaultProps = {\n  linkClass: null,\n};\nStyledLink.propTypes = {\n  children: PropTypes.node.isRequired,\n  linkClass: PropTypes.string,\n};\n"],"names":["axios","classNames","React","useMemo","useState","useDispatch","useSelector","mainMenu","userLoggedOut","useGetQuery","Icon","StyledLink","Loader","LogoutMenu","administratorState","state","administrator","dispatch","isDropdownOpen","setDropdownOpen","isLoader","setIsLoader","handleLogOut","currentWindow","window","location","pathname","options","headers","withCredentials","post","then","reload","handleDropdownMenu","e","button","currentTarget","nodeName","setAttribute","getUserName","lastName","currentUser","getCivility","civility","open","active","PropTypes","Link","children","linkClass","as","linkTo","target","dataTestid","defaultProps","propTypes","node","isRequired","string"],"sourceRoot":""}